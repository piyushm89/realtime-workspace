{"ast":null,"code":"var _jsxFileName = \"/home/piyush/Desktop/collabdraw/realtime-workspace/client/src/components/CanvasFixed.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = ({\n  socket,\n  workspaceData\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [tool, setTool] = useState('pen');\n  const [color, setColor] = useState('#000000');\n  const [brushSize, setBrushSize] = useState(5);\n  const [shape, setShape] = useState('rectangle');\n  const [startPoint, setStartPoint] = useState(null);\n  const colors = ['#000000', '#FF0000', '#00FF00', '#0000FF', '#FFFF00', '#FF00FF', '#00FFFF', '#FFA500', '#800080', '#FFC0CB'];\n  const brushSizes = [2, 5, 10, 15, 20];\n  const shapes = ['rectangle', 'circle', 'line', 'triangle'];\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set fixed size for testing\n    canvas.width = 800;\n    canvas.height = 600;\n    const ctx = canvas.getContext('2d');\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n\n    // White background\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    console.log('Canvas initialized:', canvas.width, 'x', canvas.height);\n  }, []);\n  const startDrawing = e => {\n    console.log('🎨 Canvas mouse down detected!');\n    e.preventDefault();\n    setIsDrawing(true);\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    setStartPoint({\n      x,\n      y\n    });\n    console.log(`Starting to draw at: ${x}, ${y}`);\n    const ctx = canvas.getContext('2d');\n    if (tool === 'pen' || tool === 'eraser') {\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n\n      // Set proper drawing mode for eraser\n      if (tool === 'eraser') {\n        ctx.globalCompositeOperation = 'destination-out';\n        ctx.strokeStyle = 'rgba(0,0,0,1)';\n      } else {\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.strokeStyle = color;\n      }\n      ctx.lineWidth = brushSize;\n\n      // Draw immediate dot\n      ctx.lineTo(x + 0.1, y + 0.1);\n      ctx.stroke();\n    }\n\n    // Emit to socket if available\n    if (socket) {\n      const drawData = {\n        type: 'start',\n        x: x,\n        y: y,\n        tool,\n        color,\n        brushSize,\n        shape: tool === 'shape' ? shape : undefined\n      };\n      socket.emit('draw-event', drawData);\n      console.log('Emitted draw-event:', drawData);\n    }\n  };\n  const draw = e => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    console.log(`Drawing to: ${x}, ${y}`);\n    const ctx = canvas.getContext('2d');\n    if (tool === 'pen' || tool === 'eraser') {\n      // Set proper drawing mode for eraser\n      if (tool === 'eraser') {\n        ctx.globalCompositeOperation = 'destination-out';\n        ctx.strokeStyle = 'rgba(0,0,0,1)';\n      } else {\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.strokeStyle = color;\n      }\n      ctx.lineWidth = brushSize;\n      ctx.lineTo(x, y);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n    } else if (tool === 'shape' && startPoint) {\n      // For shapes, we'll draw preview in stopDrawing\n      // Here we could add live preview if needed\n    }\n\n    // Emit to socket if available\n    if (socket && (tool === 'pen' || tool === 'eraser')) {\n      const drawData = {\n        type: 'draw',\n        x: x,\n        y: y,\n        tool,\n        color,\n        brushSize\n      };\n      socket.emit('draw-event', drawData);\n    }\n  };\n  const stopDrawing = e => {\n    if (!isDrawing) return;\n    console.log('🛑 Stop drawing');\n    setIsDrawing(false);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Handle shape drawing\n    if (tool === 'shape' && startPoint && e) {\n      const rect = canvas.getBoundingClientRect();\n      const endX = e.clientX - rect.left;\n      const endY = e.clientY - rect.top;\n      drawShape(ctx, startPoint.x, startPoint.y, endX, endY, shape, color, brushSize);\n\n      // Emit shape data to socket\n      if (socket) {\n        const shapeData = {\n          type: 'shape',\n          startX: startPoint.x,\n          startY: startPoint.y,\n          endX: endX,\n          endY: endY,\n          shape: shape,\n          color: color,\n          brushSize: brushSize\n        };\n        socket.emit('draw-event', shapeData);\n      }\n    }\n    setStartPoint(null);\n\n    // Emit to socket if available\n    if (socket && tool !== 'shape') {\n      const drawData = {\n        type: 'end',\n        tool,\n        color,\n        brushSize\n      };\n      socket.emit('draw-event', drawData);\n    }\n  };\n  const drawShape = (ctx, startX, startY, endX, endY, shapeType, shapeColor, strokeWidth) => {\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.strokeStyle = shapeColor;\n    ctx.lineWidth = strokeWidth;\n    ctx.beginPath();\n    const width = endX - startX;\n    const height = endY - startY;\n    switch (shapeType) {\n      case 'rectangle':\n        ctx.rect(startX, startY, width, height);\n        break;\n      case 'circle':\n        const radius = Math.sqrt(width * width + height * height) / 2;\n        const centerX = startX + width / 2;\n        const centerY = startY + height / 2;\n        ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI);\n        break;\n      case 'line':\n        ctx.moveTo(startX, startY);\n        ctx.lineTo(endX, endY);\n        break;\n      case 'triangle':\n        ctx.moveTo(startX + width / 2, startY);\n        ctx.lineTo(startX, endY);\n        ctx.lineTo(endX, endY);\n        ctx.closePath();\n        break;\n      default:\n        break;\n    }\n    ctx.stroke();\n  };\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Reset white background\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    if (socket) {\n      socket.emit('draw-event', {\n        type: 'clear'\n      });\n    }\n  };\n\n  // Handle incoming draw events from other users\n  useEffect(() => {\n    if (!socket) return;\n    const handleDrawEvent = data => {\n      console.log('Received draw event:', data);\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const ctx = canvas.getContext('2d');\n      if (data.type === 'clear') {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        return;\n      }\n      if (data.type === 'shape') {\n        drawShape(ctx, data.startX, data.startY, data.endX, data.endY, data.shape, data.color, data.brushSize);\n        return;\n      }\n\n      // Handle pen and eraser\n      if (data.tool === 'eraser') {\n        ctx.globalCompositeOperation = 'destination-out';\n        ctx.strokeStyle = 'rgba(0,0,0,1)';\n      } else {\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.strokeStyle = data.color;\n      }\n      ctx.lineWidth = data.brushSize;\n      if (data.type === 'start') {\n        ctx.beginPath();\n        ctx.moveTo(data.x, data.y);\n        ctx.lineTo(data.x + 0.1, data.y + 0.1);\n        ctx.stroke();\n      } else if (data.type === 'draw') {\n        ctx.lineTo(data.x, data.y);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(data.x, data.y);\n      }\n    };\n    socket.on('draw-event', handleDrawEvent);\n    return () => {\n      socket.off('draw-event', handleDrawEvent);\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 flex flex-col bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-100 border-b border-gray-200 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-6 flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Tool:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setTool('pen'),\n            className: `px-3 py-1 rounded text-sm ${tool === 'pen' ? 'bg-blue-500 text-white' : 'bg-white text-gray-700 border border-gray-300'}`,\n            children: \"\\u270F\\uFE0F Pen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setTool('eraser'),\n            className: `px-3 py-1 rounded text-sm ${tool === 'eraser' ? 'bg-blue-500 text-white' : 'bg-white text-gray-700 border border-gray-300'}`,\n            children: \"\\uD83E\\uDDFD Eraser\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-1\",\n            children: colors.map(c => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setColor(c),\n              className: `w-6 h-6 rounded border-2 ${color === c ? 'border-gray-800' : 'border-gray-300'}`,\n              style: {\n                backgroundColor: c\n              }\n            }, c, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-1\",\n            children: brushSizes.map(size => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setBrushSize(size),\n              className: `px-2 py-1 rounded text-xs ${brushSize === size ? 'bg-blue-500 text-white' : 'bg-white text-gray-700 border border-gray-300'}`,\n              children: [size, \"px\"]\n            }, size, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"50\",\n            value: brushSize,\n            onChange: e => setBrushSize(parseInt(e.target.value)),\n            className: \"w-20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: [brushSize, \"px\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearCanvas,\n          className: \"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 text-sm\",\n          children: \"\\uD83D\\uDDD1\\uFE0F Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-4 bg-gray-50 flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border-2 border-gray-300 rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"cursor-crosshair\",\n          onMouseDown: startDrawing,\n          onMouseMove: draw,\n          onMouseUp: stopDrawing,\n          onMouseLeave: stopDrawing,\n          style: {\n            display: 'block',\n            cursor: tool === 'pen' ? 'crosshair' : 'grab'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"/oAYoe3pyryRKlRuKRh81XJSt5Q=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Canvas","socket","workspaceData","_s","canvasRef","isDrawing","setIsDrawing","tool","setTool","color","setColor","brushSize","setBrushSize","shape","setShape","startPoint","setStartPoint","colors","brushSizes","shapes","canvas","current","width","height","ctx","getContext","lineCap","lineJoin","fillStyle","fillRect","console","log","startDrawing","e","preventDefault","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","beginPath","moveTo","globalCompositeOperation","strokeStyle","lineWidth","lineTo","stroke","drawData","type","undefined","emit","draw","stopDrawing","endX","endY","drawShape","shapeData","startX","startY","shapeType","shapeColor","strokeWidth","radius","Math","sqrt","centerX","centerY","arc","PI","closePath","clearCanvas","clearRect","handleDrawEvent","data","on","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","c","style","backgroundColor","size","min","max","value","onChange","parseInt","target","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","display","cursor","_c","$RefreshReg$"],"sources":["/home/piyush/Desktop/collabdraw/realtime-workspace/client/src/components/CanvasFixed.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\nconst Canvas = ({ socket, workspaceData }) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [tool, setTool] = useState('pen');\n  const [color, setColor] = useState('#000000');\n  const [brushSize, setBrushSize] = useState(5);\n  const [shape, setShape] = useState('rectangle');\n  const [startPoint, setStartPoint] = useState(null);\n\n  const colors = [\n    '#000000', '#FF0000', '#00FF00', '#0000FF', '#FFFF00',\n    '#FF00FF', '#00FFFF', '#FFA500', '#800080', '#FFC0CB'\n  ];\n\n  const brushSizes = [2, 5, 10, 15, 20];\n  const shapes = ['rectangle', 'circle', 'line', 'triangle'];\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set fixed size for testing\n    canvas.width = 800;\n    canvas.height = 600;\n    \n    const ctx = canvas.getContext('2d');\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    \n    // White background\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    \n    console.log('Canvas initialized:', canvas.width, 'x', canvas.height);\n  }, []);\n\n  const startDrawing = (e) => {\n    console.log('🎨 Canvas mouse down detected!');\n    e.preventDefault();\n    setIsDrawing(true);\n    \n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    \n    setStartPoint({ x, y });\n    console.log(`Starting to draw at: ${x}, ${y}`);\n    \n    const ctx = canvas.getContext('2d');\n    \n    if (tool === 'pen' || tool === 'eraser') {\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      \n      // Set proper drawing mode for eraser\n      if (tool === 'eraser') {\n        ctx.globalCompositeOperation = 'destination-out';\n        ctx.strokeStyle = 'rgba(0,0,0,1)';\n      } else {\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.strokeStyle = color;\n      }\n      \n      ctx.lineWidth = brushSize;\n      \n      // Draw immediate dot\n      ctx.lineTo(x + 0.1, y + 0.1);\n      ctx.stroke();\n    }\n    \n    // Emit to socket if available\n    if (socket) {\n      const drawData = {\n        type: 'start',\n        x: x,\n        y: y,\n        tool,\n        color,\n        brushSize,\n        shape: tool === 'shape' ? shape : undefined\n      };\n      socket.emit('draw-event', drawData);\n      console.log('Emitted draw-event:', drawData);\n    }\n  };\n\n  const draw = (e) => {\n    if (!isDrawing) return;\n    \n    e.preventDefault();\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    \n    console.log(`Drawing to: ${x}, ${y}`);\n    \n    const ctx = canvas.getContext('2d');\n    \n    if (tool === 'pen' || tool === 'eraser') {\n      // Set proper drawing mode for eraser\n      if (tool === 'eraser') {\n        ctx.globalCompositeOperation = 'destination-out';\n        ctx.strokeStyle = 'rgba(0,0,0,1)';\n      } else {\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.strokeStyle = color;\n      }\n      \n      ctx.lineWidth = brushSize;\n      ctx.lineTo(x, y);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n    } else if (tool === 'shape' && startPoint) {\n      // For shapes, we'll draw preview in stopDrawing\n      // Here we could add live preview if needed\n    }\n    \n    // Emit to socket if available\n    if (socket && (tool === 'pen' || tool === 'eraser')) {\n      const drawData = {\n        type: 'draw',\n        x: x,\n        y: y,\n        tool,\n        color,\n        brushSize\n      };\n      socket.emit('draw-event', drawData);\n    }\n  };\n\n  const stopDrawing = (e) => {\n    if (!isDrawing) return;\n    \n    console.log('🛑 Stop drawing');\n    setIsDrawing(false);\n    \n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    // Handle shape drawing\n    if (tool === 'shape' && startPoint && e) {\n      const rect = canvas.getBoundingClientRect();\n      const endX = e.clientX - rect.left;\n      const endY = e.clientY - rect.top;\n      \n      drawShape(ctx, startPoint.x, startPoint.y, endX, endY, shape, color, brushSize);\n      \n      // Emit shape data to socket\n      if (socket) {\n        const shapeData = {\n          type: 'shape',\n          startX: startPoint.x,\n          startY: startPoint.y,\n          endX: endX,\n          endY: endY,\n          shape: shape,\n          color: color,\n          brushSize: brushSize\n        };\n        socket.emit('draw-event', shapeData);\n      }\n    }\n    \n    setStartPoint(null);\n    \n    // Emit to socket if available\n    if (socket && tool !== 'shape') {\n      const drawData = {\n        type: 'end',\n        tool,\n        color,\n        brushSize\n      };\n      socket.emit('draw-event', drawData);\n    }\n  };\n\n  const drawShape = (ctx, startX, startY, endX, endY, shapeType, shapeColor, strokeWidth) => {\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.strokeStyle = shapeColor;\n    ctx.lineWidth = strokeWidth;\n    ctx.beginPath();\n    \n    const width = endX - startX;\n    const height = endY - startY;\n    \n    switch (shapeType) {\n      case 'rectangle':\n        ctx.rect(startX, startY, width, height);\n        break;\n      case 'circle':\n        const radius = Math.sqrt(width * width + height * height) / 2;\n        const centerX = startX + width / 2;\n        const centerY = startY + height / 2;\n        ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI);\n        break;\n      case 'line':\n        ctx.moveTo(startX, startY);\n        ctx.lineTo(endX, endY);\n        break;\n      case 'triangle':\n        ctx.moveTo(startX + width / 2, startY);\n        ctx.lineTo(startX, endY);\n        ctx.lineTo(endX, endY);\n        ctx.closePath();\n        break;\n      default:\n        break;\n    }\n    \n    ctx.stroke();\n  };\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    // Reset white background\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    if (socket) {\n      socket.emit('draw-event', { type: 'clear' });\n    }\n  };\n\n  // Handle incoming draw events from other users\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleDrawEvent = (data) => {\n      console.log('Received draw event:', data);\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      const ctx = canvas.getContext('2d');\n      \n      if (data.type === 'clear') {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        return;\n      }\n      \n      if (data.type === 'shape') {\n        drawShape(ctx, data.startX, data.startY, data.endX, data.endY, data.shape, data.color, data.brushSize);\n        return;\n      }\n      \n      // Handle pen and eraser\n      if (data.tool === 'eraser') {\n        ctx.globalCompositeOperation = 'destination-out';\n        ctx.strokeStyle = 'rgba(0,0,0,1)';\n      } else {\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.strokeStyle = data.color;\n      }\n      \n      ctx.lineWidth = data.brushSize;\n      \n      if (data.type === 'start') {\n        ctx.beginPath();\n        ctx.moveTo(data.x, data.y);\n        ctx.lineTo(data.x + 0.1, data.y + 0.1);\n        ctx.stroke();\n      } else if (data.type === 'draw') {\n        ctx.lineTo(data.x, data.y);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(data.x, data.y);\n      }\n    };\n\n    socket.on('draw-event', handleDrawEvent);\n\n    return () => {\n      socket.off('draw-event', handleDrawEvent);\n    };\n  }, [socket]);\n\n  return (\n    <div className=\"flex-1 flex flex-col bg-white\">\n      {/* Toolbar */}\n      <div className=\"bg-gray-100 border-b border-gray-200 p-4\">\n        <div className=\"flex items-center space-x-6 flex-wrap\">\n          {/* Tool Selection */}\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-sm font-medium text-gray-700\">Tool:</label>\n            <button\n              onClick={() => setTool('pen')}\n              className={`px-3 py-1 rounded text-sm ${\n                tool === 'pen'\n                  ? 'bg-blue-500 text-white'\n                  : 'bg-white text-gray-700 border border-gray-300'\n              }`}\n            >\n              ✏️ Pen\n            </button>\n            <button\n              onClick={() => setTool('eraser')}\n              className={`px-3 py-1 rounded text-sm ${\n                tool === 'eraser'\n                  ? 'bg-blue-500 text-white'\n                  : 'bg-white text-gray-700 border border-gray-300'\n              }`}\n            >\n              🧽 Eraser\n            </button>\n          </div>\n\n          {/* Color Palette */}\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-sm font-medium text-gray-700\">Color:</label>\n            <div className=\"flex space-x-1\">\n              {colors.map((c) => (\n                <button\n                  key={c}\n                  onClick={() => setColor(c)}\n                  className={`w-6 h-6 rounded border-2 ${\n                    color === c ? 'border-gray-800' : 'border-gray-300'\n                  }`}\n                  style={{ backgroundColor: c }}\n                />\n              ))}\n            </div>\n          </div>\n\n          {/* Brush Size */}\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-sm font-medium text-gray-700\">Size:</label>\n            <div className=\"flex space-x-1\">\n              {brushSizes.map((size) => (\n                <button\n                  key={size}\n                  onClick={() => setBrushSize(size)}\n                  className={`px-2 py-1 rounded text-xs ${\n                    brushSize === size\n                      ? 'bg-blue-500 text-white'\n                      : 'bg-white text-gray-700 border border-gray-300'\n                  }`}\n                >\n                  {size}px\n                </button>\n              ))}\n            </div>\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"50\"\n              value={brushSize}\n              onChange={(e) => setBrushSize(parseInt(e.target.value))}\n              className=\"w-20\"\n            />\n            <span className=\"text-sm text-gray-600\">{brushSize}px</span>\n          </div>\n\n          <button\n            onClick={clearCanvas}\n            className=\"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 text-sm\"\n          >\n            🗑️ Clear\n          </button>\n        </div>\n      </div>\n\n      {/* Canvas Area */}\n      <div className=\"flex-1 p-4 bg-gray-50 flex justify-center items-center\">\n        <div className=\"bg-white border-2 border-gray-300 rounded\">\n          <canvas\n            ref={canvasRef}\n            className=\"cursor-crosshair\"\n            onMouseDown={startDrawing}\n            onMouseMove={draw}\n            onMouseUp={stopDrawing}\n            onMouseLeave={stopDrawing}\n            style={{\n              display: 'block',\n              cursor: tool === 'pen' ? 'crosshair' : 'grab'\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}