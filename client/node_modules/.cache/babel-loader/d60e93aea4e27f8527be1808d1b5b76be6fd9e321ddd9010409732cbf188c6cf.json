{"ast":null,"code":"var _jsxFileName = \"/home/piyush/Desktop/collabdraw/realtime-workspace/client/src/components/ExcalidrawCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport LibraryPanel from './LibraryPanel';\nimport ExportImportPanel from './ExportImportPanel';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExcalidrawCanvas = ({\n  socket,\n  workspaceData\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [tool, setTool] = useState('selection');\n  const [color, setColor] = useState('#000000');\n  const [strokeWidth, setStrokeWidth] = useState(2);\n  const [fillStyle, setFillStyle] = useState('transparent');\n  const [opacity, setOpacity] = useState(100);\n  const [fontSize, setFontSize] = useState(20);\n  const [fontFamily, setFontFamily] = useState('Arial');\n  const [zoom, setZoom] = useState(100);\n  const [startPoint, setStartPoint] = useState(null);\n  const [currentShape, setCurrentShape] = useState('rectangle');\n  const [isTyping, setIsTyping] = useState(false);\n  const [textInput, setTextInput] = useState('');\n  const [textPosition, setTextPosition] = useState(null);\n  const [roughness, setRoughness] = useState(1);\n  const [strokeStyle, setStrokeStyle] = useState('solid');\n  const [arrowType, setArrowType] = useState('none');\n  const [elements, setElements] = useState([]);\n  const [showLibrary, setShowLibrary] = useState(false);\n  const [showExportImport, setShowExportImport] = useState(false);\n  const [canvasOffset, setCanvasOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n\n  // Tools available\n  const tools = [{\n    name: 'selection',\n    icon: '↖️',\n    label: 'Select'\n  }, {\n    name: 'hand',\n    icon: '✋',\n    label: 'Hand'\n  }, {\n    name: 'rectangle',\n    icon: '⬜',\n    label: 'Rectangle'\n  }, {\n    name: 'diamond',\n    icon: '💎',\n    label: 'Diamond'\n  }, {\n    name: 'ellipse',\n    icon: '⭕',\n    label: 'Ellipse'\n  }, {\n    name: 'arrow',\n    icon: '➡️',\n    label: 'Arrow'\n  }, {\n    name: 'line',\n    icon: '📏',\n    label: 'Line'\n  }, {\n    name: 'draw',\n    icon: '✏️',\n    label: 'Draw'\n  }, {\n    name: 'text',\n    icon: '📝',\n    label: 'Text'\n  }, {\n    name: 'image',\n    icon: '🖼️',\n    label: 'Image'\n  }, {\n    name: 'eraser',\n    icon: '🧽',\n    label: 'Eraser'\n  }];\n\n  // Colors\n  const colors = ['#000000', '#e03131', '#2f9e44', '#1971c2', '#f08c00', '#e64980', '#7950f2', '#495057', '#ffffff', '#fab005'];\n\n  // Stroke widths\n  const strokeWidths = [1, 2, 4, 8];\n\n  // Fill styles\n  const fillStyles = ['transparent', 'solid', 'hachure', 'cross-hatch'];\n\n  // Font families\n  const fontFamilies = ['Arial', 'Helvetica', 'Georgia', 'Times', 'Courier'];\n\n  // Initialize canvas and keyboard shortcuts\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    canvas.width = 1200;\n    canvas.height = 800;\n    const ctx = canvas.getContext('2d');\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n\n    // White background\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Keyboard shortcuts\n    const handleKeydown = e => {\n      if (e.ctrlKey || e.metaKey) {\n        switch (e.key) {\n          case 'z':\n            e.preventDefault();\n            if (e.shiftKey) {\n              handleRedo();\n            } else {\n              handleUndo();\n            }\n            break;\n          case 'y':\n            e.preventDefault();\n            handleRedo();\n            break;\n          case 'a':\n            e.preventDefault();\n            setTool('selection');\n            break;\n          case 'd':\n            e.preventDefault();\n            setTool('draw');\n            break;\n          case 't':\n            e.preventDefault();\n            setTool('text');\n            break;\n          case 'r':\n            e.preventDefault();\n            setTool('rectangle');\n            break;\n          case 'o':\n            e.preventDefault();\n            setTool('ellipse');\n            break;\n          case 'l':\n            e.preventDefault();\n            setTool('line');\n            break;\n          case 'Delete':\n          case 'Backspace':\n            e.preventDefault();\n            // Delete selected elements logic\n            break;\n        }\n      }\n\n      // Single key shortcuts\n      switch (e.key) {\n        case 'v':\n          setTool('selection');\n          break;\n        case 'h':\n          setTool('hand');\n          break;\n        case 'Escape':\n          setTool('selection');\n          setIsTyping(false);\n          break;\n      }\n    };\n    document.addEventListener('keydown', handleKeydown);\n    console.log('Enhanced Canvas initialized with shortcuts');\n    return () => {\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  }, [historyIndex, history]);\n\n  // Get canvas coordinates\n  const getCanvasPoint = useCallback(e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (e.clientX - rect.left) * scaleX,\n      y: (e.clientY - rect.top) * scaleY\n    };\n  }, []);\n\n  // Generate unique ID for elements\n  const generateId = () => Math.random().toString(36).substring(2, 15);\n\n  // Undo/Redo functionality\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const saveToHistory = newElements => {\n    const newHistory = history.slice(0, historyIndex + 1);\n    newHistory.push([...newElements]);\n    setHistory(newHistory);\n    setHistoryIndex(newHistory.length - 1);\n  };\n  const handleUndo = () => {\n    if (historyIndex > 0) {\n      setHistoryIndex(historyIndex - 1);\n      setElements(history[historyIndex - 1]);\n      redrawCanvas(history[historyIndex - 1]);\n    }\n  };\n  const handleRedo = () => {\n    if (historyIndex < history.length - 1) {\n      setHistoryIndex(historyIndex + 1);\n      setElements(history[historyIndex + 1]);\n      redrawCanvas(history[historyIndex + 1]);\n    }\n  };\n\n  // Redraw canvas with elements\n  const redrawCanvas = elementsToRender => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    elementsToRender.forEach(element => {\n      renderElement(ctx, element);\n    });\n  };\n\n  // Render individual element\n  const renderElement = (ctx, element) => {\n    ctx.globalAlpha = (element.opacity || 100) / 100;\n    switch (element.type) {\n      case 'rectangle':\n        drawRoughRectangle(ctx, element.startX, element.startY, element.endX - element.startX, element.endY - element.startY, {\n          strokeColor: element.color,\n          fillColor: element.fillStyle === 'transparent' ? 'transparent' : element.color,\n          strokeWidth: element.strokeWidth,\n          roughness: element.roughness || 1\n        });\n        break;\n      case 'ellipse':\n        const centerX = (element.startX + element.endX) / 2;\n        const centerY = (element.startY + element.endY) / 2;\n        const radiusX = Math.abs(element.endX - element.startX) / 2;\n        const radiusY = Math.abs(element.endY - element.startY) / 2;\n        drawRoughEllipse(ctx, centerX, centerY, radiusX, radiusY, {\n          strokeColor: element.color,\n          fillColor: element.fillStyle === 'transparent' ? 'transparent' : element.color,\n          strokeWidth: element.strokeWidth,\n          roughness: element.roughness || 1\n        });\n        break;\n      case 'text':\n        ctx.font = `${element.fontSize}px ${element.fontFamily}`;\n        ctx.fillStyle = element.color;\n        ctx.fillText(element.text, element.x, element.y);\n        break;\n      // Add more element types as needed\n    }\n    ctx.globalAlpha = 1;\n  };\n\n  // Drawing functions\n  const drawRoughRectangle = (ctx, x, y, width, height, options = {}) => {\n    const {\n      strokeColor = '#000',\n      fillColor = 'transparent',\n      strokeWidth = 2,\n      roughness = 1\n    } = options;\n    ctx.strokeStyle = strokeColor;\n    ctx.fillStyle = fillColor;\n    ctx.lineWidth = strokeWidth;\n    if (roughness > 0) {\n      // Add roughness effect\n      const offset = roughness * 2;\n      ctx.beginPath();\n      ctx.moveTo(x + Math.random() * offset, y + Math.random() * offset);\n      ctx.lineTo(x + width + Math.random() * offset, y + Math.random() * offset);\n      ctx.lineTo(x + width + Math.random() * offset, y + height + Math.random() * offset);\n      ctx.lineTo(x + Math.random() * offset, y + height + Math.random() * offset);\n      ctx.closePath();\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n    if (fillColor !== 'transparent') ctx.fill();\n    ctx.stroke();\n  };\n  const drawRoughEllipse = (ctx, centerX, centerY, radiusX, radiusY, options = {}) => {\n    const {\n      strokeColor = '#000',\n      fillColor = 'transparent',\n      strokeWidth = 2,\n      roughness = 1\n    } = options;\n    ctx.strokeStyle = strokeColor;\n    ctx.fillStyle = fillColor;\n    ctx.lineWidth = strokeWidth;\n    ctx.beginPath();\n    if (roughness > 0) {\n      // Rough ellipse approximation\n      const steps = 32;\n      for (let i = 0; i <= steps; i++) {\n        const angle = i / steps * 2 * Math.PI;\n        const x = centerX + Math.cos(angle) * radiusX + (Math.random() - 0.5) * roughness * 2;\n        const y = centerY + Math.sin(angle) * radiusY + (Math.random() - 0.5) * roughness * 2;\n        if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      }\n    } else {\n      ctx.ellipse(centerX, centerY, radiusX, radiusY, 0, 0, 2 * Math.PI);\n    }\n    if (fillColor !== 'transparent') ctx.fill();\n    ctx.stroke();\n  };\n  const drawArrow = (ctx, startX, startY, endX, endY, options = {}) => {\n    const {\n      strokeColor = '#000',\n      strokeWidth = 2\n    } = options;\n    ctx.strokeStyle = strokeColor;\n    ctx.lineWidth = strokeWidth;\n\n    // Draw line\n    ctx.beginPath();\n    ctx.moveTo(startX, startY);\n    ctx.lineTo(endX, endY);\n    ctx.stroke();\n\n    // Draw arrowhead\n    const angle = Math.atan2(endY - startY, endX - startX);\n    const headLength = 15;\n    ctx.beginPath();\n    ctx.moveTo(endX, endY);\n    ctx.lineTo(endX - headLength * Math.cos(angle - Math.PI / 6), endY - headLength * Math.sin(angle - Math.PI / 6));\n    ctx.moveTo(endX, endY);\n    ctx.lineTo(endX - headLength * Math.cos(angle + Math.PI / 6), endY - headLength * Math.sin(angle + Math.PI / 6));\n    ctx.stroke();\n  };\n  const drawDiamond = (ctx, centerX, centerY, width, height, options = {}) => {\n    const {\n      strokeColor = '#000',\n      fillColor = 'transparent',\n      strokeWidth = 2\n    } = options;\n    ctx.strokeStyle = strokeColor;\n    ctx.fillStyle = fillColor;\n    ctx.lineWidth = strokeWidth;\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY - height / 2);\n    ctx.lineTo(centerX + width / 2, centerY);\n    ctx.lineTo(centerX, centerY + height / 2);\n    ctx.lineTo(centerX - width / 2, centerY);\n    ctx.closePath();\n    if (fillColor !== 'transparent') ctx.fill();\n    ctx.stroke();\n  };\n\n  // Event handlers\n  const handleMouseDown = e => {\n    const point = getCanvasPoint(e);\n    setIsDrawing(true);\n    setStartPoint(point);\n    if (tool === 'text') {\n      setTextPosition(point);\n      setIsTyping(true);\n      return;\n    }\n    if (tool === 'draw') {\n      const ctx = canvasRef.current.getContext('2d');\n      ctx.beginPath();\n      ctx.moveTo(point.x, point.y);\n      ctx.strokeStyle = color;\n      ctx.lineWidth = strokeWidth;\n      ctx.globalAlpha = opacity / 100;\n    }\n\n    // Emit start event\n    if (socket) {\n      socket.emit('draw-event', {\n        type: 'start',\n        tool,\n        x: point.x,\n        y: point.y,\n        color,\n        strokeWidth,\n        opacity\n      });\n    }\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing || !startPoint) return;\n    const point = getCanvasPoint(e);\n    const ctx = canvasRef.current.getContext('2d');\n    if (tool === 'draw') {\n      ctx.lineTo(point.x, point.y);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(point.x, point.y);\n      if (socket) {\n        socket.emit('draw-event', {\n          type: 'draw',\n          tool,\n          x: point.x,\n          y: point.y,\n          color,\n          strokeWidth,\n          opacity\n        });\n      }\n    }\n  };\n  const handleMouseUp = e => {\n    if (!isDrawing || !startPoint) return;\n    const point = getCanvasPoint(e);\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.globalAlpha = opacity / 100;\n    const options = {\n      strokeColor: color,\n      fillColor: fillStyle === 'transparent' ? 'transparent' : color,\n      strokeWidth,\n      roughness\n    };\n    let elementData = {\n      id: generateId(),\n      type: tool,\n      startX: startPoint.x,\n      startY: startPoint.y,\n      endX: point.x,\n      endY: point.y,\n      color,\n      strokeWidth,\n      fillStyle,\n      opacity,\n      roughness\n    };\n    switch (tool) {\n      case 'rectangle':\n        const width = point.x - startPoint.x;\n        const height = point.y - startPoint.y;\n        drawRoughRectangle(ctx, startPoint.x, startPoint.y, width, height, options);\n        break;\n      case 'ellipse':\n        const centerX = (startPoint.x + point.x) / 2;\n        const centerY = (startPoint.y + point.y) / 2;\n        const radiusX = Math.abs(point.x - startPoint.x) / 2;\n        const radiusY = Math.abs(point.y - startPoint.y) / 2;\n        drawRoughEllipse(ctx, centerX, centerY, radiusX, radiusY, options);\n        break;\n      case 'diamond':\n        const diamondCenterX = (startPoint.x + point.x) / 2;\n        const diamondCenterY = (startPoint.y + point.y) / 2;\n        const diamondWidth = Math.abs(point.x - startPoint.x);\n        const diamondHeight = Math.abs(point.y - startPoint.y);\n        drawDiamond(ctx, diamondCenterX, diamondCenterY, diamondWidth, diamondHeight, options);\n        break;\n      case 'arrow':\n        drawArrow(ctx, startPoint.x, startPoint.y, point.x, point.y, options);\n        break;\n      case 'line':\n        ctx.beginPath();\n        ctx.strokeStyle = color;\n        ctx.lineWidth = strokeWidth;\n        ctx.moveTo(startPoint.x, startPoint.y);\n        ctx.lineTo(point.x, point.y);\n        ctx.stroke();\n        break;\n      case 'eraser':\n        // Eraser logic handled in mousemove\n        break;\n    }\n\n    // Add element to history\n    if (tool !== 'draw' && tool !== 'eraser') {\n      setElements(prev => [...prev, elementData]);\n    }\n\n    // Emit to socket\n    if (socket && tool !== 'draw') {\n      socket.emit('draw-event', {\n        type: 'shape',\n        ...elementData\n      });\n    }\n    setIsDrawing(false);\n    setStartPoint(null);\n    ctx.globalAlpha = 1;\n  };\n\n  // Text handling\n  const handleTextSubmit = () => {\n    if (!textInput.trim() || !textPosition) return;\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.font = `${fontSize}px ${fontFamily}`;\n    ctx.fillStyle = color;\n    ctx.globalAlpha = opacity / 100;\n    ctx.fillText(textInput, textPosition.x, textPosition.y);\n    ctx.globalAlpha = 1;\n    const textElement = {\n      id: generateId(),\n      type: 'text',\n      x: textPosition.x,\n      y: textPosition.y,\n      text: textInput,\n      fontSize,\n      fontFamily,\n      color,\n      opacity\n    };\n    setElements(prev => [...prev, textElement]);\n    if (socket) {\n      socket.emit('draw-event', {\n        type: 'text',\n        ...textElement\n      });\n    }\n    setTextInput('');\n    setIsTyping(false);\n    setTextPosition(null);\n  };\n\n  // Clear canvas\n  const clearCanvas = () => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setElements([]);\n    if (socket) {\n      socket.emit('draw-event', {\n        type: 'clear'\n      });\n    }\n  };\n\n  // Zoom functions\n  const handleZoomIn = () => setZoom(prev => Math.min(prev + 10, 300));\n  const handleZoomOut = () => setZoom(prev => Math.max(prev - 10, 25));\n  const handleZoomReset = () => setZoom(100);\n\n  // Action buttons\n  const actionButtons = [{\n    name: 'library',\n    icon: '📚',\n    label: 'Library',\n    onClick: () => setShowLibrary(true)\n  }, {\n    name: 'export',\n    icon: '📤',\n    label: 'Export',\n    onClick: () => setShowExportImport(true)\n  }, {\n    name: 'undo',\n    icon: '↶',\n    label: 'Undo',\n    onClick: handleUndo\n  }, {\n    name: 'redo',\n    icon: '↷',\n    label: 'Redo',\n    onClick: handleRedo\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 flex flex-col bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-50 border-b border-gray-200 p-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1\",\n          children: [tools.map(t => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setTool(t.name),\n            className: `p-2 rounded-lg text-sm flex flex-col items-center min-w-[60px] ${tool === t.name ? 'bg-blue-500 text-white shadow-md' : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'}`,\n            title: t.label,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg\",\n              children: t.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs mt-1\",\n              children: t.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this)]\n          }, t.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-px h-12 bg-gray-300 mx-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this), actionButtons.map(btn => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: btn.onClick,\n            className: \"p-2 rounded-lg text-sm flex flex-col items-center min-w-[60px] bg-white text-gray-700 border border-gray-300 hover:bg-gray-50\",\n            title: btn.label,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg\",\n              children: btn.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs mt-1\",\n              children: btn.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 17\n            }, this)]\n          }, btn.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4 text-sm text-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Elements: \", elements.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Canvas: 1200\\xD7800\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleZoomOut,\n            className: \"px-3 py-2 bg-white border border-gray-300 rounded text-sm hover:bg-gray-50\",\n            disabled: zoom <= 25,\n            children: \"\\u2212\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleZoomReset,\n            className: \"px-4 py-2 bg-white border border-gray-300 rounded text-sm hover:bg-gray-50 min-w-[80px]\",\n            children: [zoom, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleZoomIn,\n            className: \"px-3 py-2 bg-white border border-gray-300 rounded text-sm hover:bg-gray-50\",\n            disabled: zoom >= 300,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white border-b border-gray-200 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-8 flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Stroke:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-1\",\n            children: [colors.map(c => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setColor(c),\n              className: `w-7 h-7 rounded-full border-2 ${color === c ? 'border-blue-500 ring-2 ring-blue-200' : 'border-gray-300'}`,\n              style: {\n                backgroundColor: c\n              }\n            }, c, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: color,\n              onChange: e => setColor(e.target.value),\n              className: \"w-7 h-7 rounded-full border-2 border-gray-300 cursor-pointer\",\n              title: \"Custom color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Width:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-1\",\n            children: strokeWidths.map(width => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setStrokeWidth(width),\n              className: `px-3 py-1 rounded text-sm ${strokeWidth === width ? 'bg-blue-500 text-white' : 'bg-gray-100 text-gray-700 border border-gray-300 hover:bg-gray-200'}`,\n              children: width\n            }, width, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"20\",\n            value: strokeWidth,\n            onChange: e => setStrokeWidth(parseInt(e.target.value)),\n            className: \"w-16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600 min-w-[35px]\",\n            children: [strokeWidth, \"px\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this), ['rectangle', 'ellipse', 'diamond'].includes(tool) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Fill:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-1\",\n            children: fillStyles.map(style => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setFillStyle(style),\n              className: `px-3 py-1 rounded text-sm capitalize ${fillStyle === style ? 'bg-green-500 text-white' : 'bg-gray-100 text-gray-700 border border-gray-300 hover:bg-gray-200'}`,\n              children: style === 'transparent' ? 'None' : style === 'hachure' ? 'Hatch' : style === 'cross-hatch' ? 'Cross' : style\n            }, style, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Style:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: strokeStyle,\n            onChange: e => setStrokeStyle(e.target.value),\n            className: \"px-3 py-1 border border-gray-300 rounded text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"solid\",\n              children: \"Solid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"dashed\",\n              children: \"Dashed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"dotted\",\n              children: \"Dotted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Roughness:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"3\",\n            step: \"0.5\",\n            value: roughness,\n            onChange: e => setRoughness(parseFloat(e.target.value)),\n            className: \"w-16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600 min-w-[25px]\",\n            children: roughness\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this), tool === 'text' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-sm font-medium text-gray-700\",\n              children: \"Font:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: fontFamily,\n              onChange: e => setFontFamily(e.target.value),\n              className: \"px-3 py-1 border border-gray-300 rounded text-sm\",\n              children: fontFamilies.map(font => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: font,\n                children: font\n              }, font, false, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-sm font-medium text-gray-700\",\n              children: \"Size:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: fontSize,\n              onChange: e => setFontSize(parseInt(e.target.value)),\n              className: \"w-16 px-2 py-1 border border-gray-300 rounded text-sm\",\n              min: \"8\",\n              max: \"72\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Opacity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"10\",\n            max: \"100\",\n            value: opacity,\n            onChange: e => setOpacity(parseInt(e.target.value)),\n            className: \"w-20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600 min-w-[35px]\",\n            children: [opacity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearCanvas,\n          className: \"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 text-sm font-medium\",\n          children: \"\\uD83D\\uDDD1\\uFE0F Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 relative overflow-auto bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8 flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white shadow-lg\",\n          style: {\n            transform: `scale(${zoom / 100})`,\n            transformOrigin: 'top left'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            onMouseDown: handleMouseDown,\n            onMouseMove: handleMouseMove,\n            onMouseUp: handleMouseUp,\n            onMouseLeave: handleMouseUp,\n            className: \"border border-gray-300 cursor-crosshair\",\n            style: {\n              cursor: tool === 'hand' ? 'grab' : tool === 'selection' ? 'default' : tool === 'text' ? 'text' : 'crosshair'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 7\n    }, this), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium mb-4\",\n          children: \"Add Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: textInput,\n          onChange: e => setTextInput(e.target.value),\n          className: \"w-80 h-32 p-3 border border-gray-300 rounded resize-none focus:outline-none focus:ring-2 focus:ring-blue-500\",\n          placeholder: \"Type your text here...\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-3 mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setIsTyping(false);\n              setTextInput('');\n              setTextPosition(null);\n            },\n            className: \"px-4 py-2 text-gray-600 border border-gray-300 rounded hover:bg-gray-50\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleTextSubmit,\n            className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n            children: \"Add Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LibraryPanel, {\n      isOpen: showLibrary,\n      onClose: () => setShowLibrary(false),\n      onAddShape: shape => {\n        // Add shape to canvas at center\n        const centerX = canvasRef.current.width / 2;\n        const centerY = canvasRef.current.height / 2;\n        const newElement = {\n          id: generateId(),\n          type: shape.type,\n          startX: centerX - 50,\n          startY: centerY - 25,\n          endX: centerX + 50,\n          endY: centerY + 25,\n          color,\n          strokeWidth,\n          fillStyle,\n          opacity,\n          roughness\n        };\n        const newElements = [...elements, newElement];\n        setElements(newElements);\n        saveToHistory(newElements);\n        redrawCanvas(newElements);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExportImportPanel, {\n      isOpen: showExportImport,\n      onClose: () => setShowExportImport(false),\n      elements: elements,\n      onExport: () => {},\n      onImport: importedElements => {\n        const newElements = [...elements, ...importedElements];\n        setElements(newElements);\n        saveToHistory(newElements);\n        redrawCanvas(newElements);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 872,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 550,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcalidrawCanvas, \"vRx8zxFfaJ1fNoZvZJFKlIHlXl8=\");\n_c = ExcalidrawCanvas;\nexport default ExcalidrawCanvas;\nvar _c;\n$RefreshReg$(_c, \"ExcalidrawCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","LibraryPanel","ExportImportPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","ExcalidrawCanvas","socket","workspaceData","_s","canvasRef","isDrawing","setIsDrawing","tool","setTool","color","setColor","strokeWidth","setStrokeWidth","fillStyle","setFillStyle","opacity","setOpacity","fontSize","setFontSize","fontFamily","setFontFamily","zoom","setZoom","startPoint","setStartPoint","currentShape","setCurrentShape","isTyping","setIsTyping","textInput","setTextInput","textPosition","setTextPosition","roughness","setRoughness","strokeStyle","setStrokeStyle","arrowType","setArrowType","elements","setElements","showLibrary","setShowLibrary","showExportImport","setShowExportImport","canvasOffset","setCanvasOffset","x","y","isDragging","setIsDragging","tools","name","icon","label","colors","strokeWidths","fillStyles","fontFamilies","canvas","current","width","height","ctx","getContext","lineCap","lineJoin","fillRect","handleKeydown","e","ctrlKey","metaKey","key","preventDefault","shiftKey","handleRedo","handleUndo","document","addEventListener","console","log","removeEventListener","historyIndex","history","getCanvasPoint","rect","getBoundingClientRect","scaleX","scaleY","clientX","left","clientY","top","generateId","Math","random","toString","substring","setHistory","setHistoryIndex","saveToHistory","newElements","newHistory","slice","push","length","redrawCanvas","elementsToRender","clearRect","forEach","element","renderElement","globalAlpha","type","drawRoughRectangle","startX","startY","endX","endY","strokeColor","fillColor","centerX","centerY","radiusX","abs","radiusY","drawRoughEllipse","font","fillText","text","options","lineWidth","offset","beginPath","moveTo","lineTo","closePath","fill","stroke","steps","i","angle","PI","cos","sin","ellipse","drawArrow","atan2","headLength","drawDiamond","handleMouseDown","point","emit","handleMouseMove","handleMouseUp","elementData","id","diamondCenterX","diamondCenterY","diamondWidth","diamondHeight","prev","handleTextSubmit","trim","textElement","clearCanvas","handleZoomIn","min","handleZoomOut","max","handleZoomReset","actionButtons","onClick","className","children","map","t","title","fileName","_jsxFileName","lineNumber","columnNumber","btn","disabled","c","style","backgroundColor","value","onChange","target","parseInt","includes","step","parseFloat","transform","transformOrigin","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","cursor","placeholder","autoFocus","isOpen","onClose","onAddShape","shape","newElement","onExport","onImport","importedElements","_c","$RefreshReg$"],"sources":["/home/piyush/Desktop/collabdraw/realtime-workspace/client/src/components/ExcalidrawCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport LibraryPanel from './LibraryPanel';\nimport ExportImportPanel from './ExportImportPanel';\n\nconst ExcalidrawCanvas = ({ socket, workspaceData }) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [tool, setTool] = useState('selection');\n  const [color, setColor] = useState('#000000');\n  const [strokeWidth, setStrokeWidth] = useState(2);\n  const [fillStyle, setFillStyle] = useState('transparent');\n  const [opacity, setOpacity] = useState(100);\n  const [fontSize, setFontSize] = useState(20);\n  const [fontFamily, setFontFamily] = useState('Arial');\n  const [zoom, setZoom] = useState(100);\n  const [startPoint, setStartPoint] = useState(null);\n  const [currentShape, setCurrentShape] = useState('rectangle');\n  const [isTyping, setIsTyping] = useState(false);\n  const [textInput, setTextInput] = useState('');\n  const [textPosition, setTextPosition] = useState(null);\n  const [roughness, setRoughness] = useState(1);\n  const [strokeStyle, setStrokeStyle] = useState('solid');\n  const [arrowType, setArrowType] = useState('none');\n  const [elements, setElements] = useState([]);\n  const [showLibrary, setShowLibrary] = useState(false);\n  const [showExportImport, setShowExportImport] = useState(false);\n  const [canvasOffset, setCanvasOffset] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n\n  // Tools available\n  const tools = [\n    { name: 'selection', icon: '↖️', label: 'Select' },\n    { name: 'hand', icon: '✋', label: 'Hand' },\n    { name: 'rectangle', icon: '⬜', label: 'Rectangle' },\n    { name: 'diamond', icon: '💎', label: 'Diamond' },\n    { name: 'ellipse', icon: '⭕', label: 'Ellipse' },\n    { name: 'arrow', icon: '➡️', label: 'Arrow' },\n    { name: 'line', icon: '📏', label: 'Line' },\n    { name: 'draw', icon: '✏️', label: 'Draw' },\n    { name: 'text', icon: '📝', label: 'Text' },\n    { name: 'image', icon: '🖼️', label: 'Image' },\n    { name: 'eraser', icon: '🧽', label: 'Eraser' }\n  ];\n\n  // Colors\n  const colors = [\n    '#000000', '#e03131', '#2f9e44', '#1971c2', '#f08c00',\n    '#e64980', '#7950f2', '#495057', '#ffffff', '#fab005'\n  ];\n\n  // Stroke widths\n  const strokeWidths = [1, 2, 4, 8];\n\n  // Fill styles\n  const fillStyles = ['transparent', 'solid', 'hachure', 'cross-hatch'];\n\n  // Font families\n  const fontFamilies = ['Arial', 'Helvetica', 'Georgia', 'Times', 'Courier'];\n\n  // Initialize canvas and keyboard shortcuts\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    canvas.width = 1200;\n    canvas.height = 800;\n    \n    const ctx = canvas.getContext('2d');\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    \n    // White background\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    \n    // Keyboard shortcuts\n    const handleKeydown = (e) => {\n      if (e.ctrlKey || e.metaKey) {\n        switch (e.key) {\n          case 'z':\n            e.preventDefault();\n            if (e.shiftKey) {\n              handleRedo();\n            } else {\n              handleUndo();\n            }\n            break;\n          case 'y':\n            e.preventDefault();\n            handleRedo();\n            break;\n          case 'a':\n            e.preventDefault();\n            setTool('selection');\n            break;\n          case 'd':\n            e.preventDefault();\n            setTool('draw');\n            break;\n          case 't':\n            e.preventDefault();\n            setTool('text');\n            break;\n          case 'r':\n            e.preventDefault();\n            setTool('rectangle');\n            break;\n          case 'o':\n            e.preventDefault();\n            setTool('ellipse');\n            break;\n          case 'l':\n            e.preventDefault();\n            setTool('line');\n            break;\n          case 'Delete':\n          case 'Backspace':\n            e.preventDefault();\n            // Delete selected elements logic\n            break;\n        }\n      }\n      \n      // Single key shortcuts\n      switch (e.key) {\n        case 'v':\n          setTool('selection');\n          break;\n        case 'h':\n          setTool('hand');\n          break;\n        case 'Escape':\n          setTool('selection');\n          setIsTyping(false);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeydown);\n    console.log('Enhanced Canvas initialized with shortcuts');\n    \n    return () => {\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  }, [historyIndex, history]);\n\n  // Get canvas coordinates\n  const getCanvasPoint = useCallback((e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    return {\n      x: (e.clientX - rect.left) * scaleX,\n      y: (e.clientY - rect.top) * scaleY\n    };\n  }, []);\n\n  // Generate unique ID for elements\n  const generateId = () => Math.random().toString(36).substring(2, 15);\n\n  // Undo/Redo functionality\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n\n  const saveToHistory = (newElements) => {\n    const newHistory = history.slice(0, historyIndex + 1);\n    newHistory.push([...newElements]);\n    setHistory(newHistory);\n    setHistoryIndex(newHistory.length - 1);\n  };\n\n  const handleUndo = () => {\n    if (historyIndex > 0) {\n      setHistoryIndex(historyIndex - 1);\n      setElements(history[historyIndex - 1]);\n      redrawCanvas(history[historyIndex - 1]);\n    }\n  };\n\n  const handleRedo = () => {\n    if (historyIndex < history.length - 1) {\n      setHistoryIndex(historyIndex + 1);\n      setElements(history[historyIndex + 1]);\n      redrawCanvas(history[historyIndex + 1]);\n    }\n  };\n\n  // Redraw canvas with elements\n  const redrawCanvas = (elementsToRender) => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    elementsToRender.forEach(element => {\n      renderElement(ctx, element);\n    });\n  };\n\n  // Render individual element\n  const renderElement = (ctx, element) => {\n    ctx.globalAlpha = (element.opacity || 100) / 100;\n    \n    switch (element.type) {\n      case 'rectangle':\n        drawRoughRectangle(ctx, element.startX, element.startY, \n          element.endX - element.startX, element.endY - element.startY, {\n            strokeColor: element.color,\n            fillColor: element.fillStyle === 'transparent' ? 'transparent' : element.color,\n            strokeWidth: element.strokeWidth,\n            roughness: element.roughness || 1\n          });\n        break;\n      case 'ellipse':\n        const centerX = (element.startX + element.endX) / 2;\n        const centerY = (element.startY + element.endY) / 2;\n        const radiusX = Math.abs(element.endX - element.startX) / 2;\n        const radiusY = Math.abs(element.endY - element.startY) / 2;\n        drawRoughEllipse(ctx, centerX, centerY, radiusX, radiusY, {\n          strokeColor: element.color,\n          fillColor: element.fillStyle === 'transparent' ? 'transparent' : element.color,\n          strokeWidth: element.strokeWidth,\n          roughness: element.roughness || 1\n        });\n        break;\n      case 'text':\n        ctx.font = `${element.fontSize}px ${element.fontFamily}`;\n        ctx.fillStyle = element.color;\n        ctx.fillText(element.text, element.x, element.y);\n        break;\n      // Add more element types as needed\n    }\n    \n    ctx.globalAlpha = 1;\n  };\n\n  // Drawing functions\n  const drawRoughRectangle = (ctx, x, y, width, height, options = {}) => {\n    const { strokeColor = '#000', fillColor = 'transparent', strokeWidth = 2, roughness = 1 } = options;\n    \n    ctx.strokeStyle = strokeColor;\n    ctx.fillStyle = fillColor;\n    ctx.lineWidth = strokeWidth;\n    \n    if (roughness > 0) {\n      // Add roughness effect\n      const offset = roughness * 2;\n      ctx.beginPath();\n      ctx.moveTo(x + Math.random() * offset, y + Math.random() * offset);\n      ctx.lineTo(x + width + Math.random() * offset, y + Math.random() * offset);\n      ctx.lineTo(x + width + Math.random() * offset, y + height + Math.random() * offset);\n      ctx.lineTo(x + Math.random() * offset, y + height + Math.random() * offset);\n      ctx.closePath();\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n    \n    if (fillColor !== 'transparent') ctx.fill();\n    ctx.stroke();\n  };\n\n  const drawRoughEllipse = (ctx, centerX, centerY, radiusX, radiusY, options = {}) => {\n    const { strokeColor = '#000', fillColor = 'transparent', strokeWidth = 2, roughness = 1 } = options;\n    \n    ctx.strokeStyle = strokeColor;\n    ctx.fillStyle = fillColor;\n    ctx.lineWidth = strokeWidth;\n    \n    ctx.beginPath();\n    if (roughness > 0) {\n      // Rough ellipse approximation\n      const steps = 32;\n      for (let i = 0; i <= steps; i++) {\n        const angle = (i / steps) * 2 * Math.PI;\n        const x = centerX + Math.cos(angle) * radiusX + (Math.random() - 0.5) * roughness * 2;\n        const y = centerY + Math.sin(angle) * radiusY + (Math.random() - 0.5) * roughness * 2;\n        if (i === 0) ctx.moveTo(x, y);\n        else ctx.lineTo(x, y);\n      }\n    } else {\n      ctx.ellipse(centerX, centerY, radiusX, radiusY, 0, 0, 2 * Math.PI);\n    }\n    \n    if (fillColor !== 'transparent') ctx.fill();\n    ctx.stroke();\n  };\n\n  const drawArrow = (ctx, startX, startY, endX, endY, options = {}) => {\n    const { strokeColor = '#000', strokeWidth = 2 } = options;\n    \n    ctx.strokeStyle = strokeColor;\n    ctx.lineWidth = strokeWidth;\n    \n    // Draw line\n    ctx.beginPath();\n    ctx.moveTo(startX, startY);\n    ctx.lineTo(endX, endY);\n    ctx.stroke();\n    \n    // Draw arrowhead\n    const angle = Math.atan2(endY - startY, endX - startX);\n    const headLength = 15;\n    \n    ctx.beginPath();\n    ctx.moveTo(endX, endY);\n    ctx.lineTo(\n      endX - headLength * Math.cos(angle - Math.PI / 6),\n      endY - headLength * Math.sin(angle - Math.PI / 6)\n    );\n    ctx.moveTo(endX, endY);\n    ctx.lineTo(\n      endX - headLength * Math.cos(angle + Math.PI / 6),\n      endY - headLength * Math.sin(angle + Math.PI / 6)\n    );\n    ctx.stroke();\n  };\n\n  const drawDiamond = (ctx, centerX, centerY, width, height, options = {}) => {\n    const { strokeColor = '#000', fillColor = 'transparent', strokeWidth = 2 } = options;\n    \n    ctx.strokeStyle = strokeColor;\n    ctx.fillStyle = fillColor;\n    ctx.lineWidth = strokeWidth;\n    \n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY - height / 2);\n    ctx.lineTo(centerX + width / 2, centerY);\n    ctx.lineTo(centerX, centerY + height / 2);\n    ctx.lineTo(centerX - width / 2, centerY);\n    ctx.closePath();\n    \n    if (fillColor !== 'transparent') ctx.fill();\n    ctx.stroke();\n  };\n\n  // Event handlers\n  const handleMouseDown = (e) => {\n    const point = getCanvasPoint(e);\n    setIsDrawing(true);\n    setStartPoint(point);\n\n    if (tool === 'text') {\n      setTextPosition(point);\n      setIsTyping(true);\n      return;\n    }\n\n    if (tool === 'draw') {\n      const ctx = canvasRef.current.getContext('2d');\n      ctx.beginPath();\n      ctx.moveTo(point.x, point.y);\n      ctx.strokeStyle = color;\n      ctx.lineWidth = strokeWidth;\n      ctx.globalAlpha = opacity / 100;\n    }\n\n    // Emit start event\n    if (socket) {\n      socket.emit('draw-event', {\n        type: 'start',\n        tool,\n        x: point.x,\n        y: point.y,\n        color,\n        strokeWidth,\n        opacity\n      });\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isDrawing || !startPoint) return;\n\n    const point = getCanvasPoint(e);\n    const ctx = canvasRef.current.getContext('2d');\n\n    if (tool === 'draw') {\n      ctx.lineTo(point.x, point.y);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(point.x, point.y);\n\n      if (socket) {\n        socket.emit('draw-event', {\n          type: 'draw',\n          tool,\n          x: point.x,\n          y: point.y,\n          color,\n          strokeWidth,\n          opacity\n        });\n      }\n    }\n  };\n\n  const handleMouseUp = (e) => {\n    if (!isDrawing || !startPoint) return;\n\n    const point = getCanvasPoint(e);\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.globalAlpha = opacity / 100;\n\n    const options = {\n      strokeColor: color,\n      fillColor: fillStyle === 'transparent' ? 'transparent' : color,\n      strokeWidth,\n      roughness\n    };\n\n    let elementData = {\n      id: generateId(),\n      type: tool,\n      startX: startPoint.x,\n      startY: startPoint.y,\n      endX: point.x,\n      endY: point.y,\n      color,\n      strokeWidth,\n      fillStyle,\n      opacity,\n      roughness\n    };\n\n    switch (tool) {\n      case 'rectangle':\n        const width = point.x - startPoint.x;\n        const height = point.y - startPoint.y;\n        drawRoughRectangle(ctx, startPoint.x, startPoint.y, width, height, options);\n        break;\n\n      case 'ellipse':\n        const centerX = (startPoint.x + point.x) / 2;\n        const centerY = (startPoint.y + point.y) / 2;\n        const radiusX = Math.abs(point.x - startPoint.x) / 2;\n        const radiusY = Math.abs(point.y - startPoint.y) / 2;\n        drawRoughEllipse(ctx, centerX, centerY, radiusX, radiusY, options);\n        break;\n\n      case 'diamond':\n        const diamondCenterX = (startPoint.x + point.x) / 2;\n        const diamondCenterY = (startPoint.y + point.y) / 2;\n        const diamondWidth = Math.abs(point.x - startPoint.x);\n        const diamondHeight = Math.abs(point.y - startPoint.y);\n        drawDiamond(ctx, diamondCenterX, diamondCenterY, diamondWidth, diamondHeight, options);\n        break;\n\n      case 'arrow':\n        drawArrow(ctx, startPoint.x, startPoint.y, point.x, point.y, options);\n        break;\n\n      case 'line':\n        ctx.beginPath();\n        ctx.strokeStyle = color;\n        ctx.lineWidth = strokeWidth;\n        ctx.moveTo(startPoint.x, startPoint.y);\n        ctx.lineTo(point.x, point.y);\n        ctx.stroke();\n        break;\n\n      case 'eraser':\n        // Eraser logic handled in mousemove\n        break;\n    }\n\n    // Add element to history\n    if (tool !== 'draw' && tool !== 'eraser') {\n      setElements(prev => [...prev, elementData]);\n    }\n\n    // Emit to socket\n    if (socket && tool !== 'draw') {\n      socket.emit('draw-event', {\n        type: 'shape',\n        ...elementData\n      });\n    }\n\n    setIsDrawing(false);\n    setStartPoint(null);\n    ctx.globalAlpha = 1;\n  };\n\n  // Text handling\n  const handleTextSubmit = () => {\n    if (!textInput.trim() || !textPosition) return;\n\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.font = `${fontSize}px ${fontFamily}`;\n    ctx.fillStyle = color;\n    ctx.globalAlpha = opacity / 100;\n    ctx.fillText(textInput, textPosition.x, textPosition.y);\n    ctx.globalAlpha = 1;\n\n    const textElement = {\n      id: generateId(),\n      type: 'text',\n      x: textPosition.x,\n      y: textPosition.y,\n      text: textInput,\n      fontSize,\n      fontFamily,\n      color,\n      opacity\n    };\n\n    setElements(prev => [...prev, textElement]);\n\n    if (socket) {\n      socket.emit('draw-event', {\n        type: 'text',\n        ...textElement\n      });\n    }\n\n    setTextInput('');\n    setIsTyping(false);\n    setTextPosition(null);\n  };\n\n  // Clear canvas\n  const clearCanvas = () => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setElements([]);\n\n    if (socket) {\n      socket.emit('draw-event', { type: 'clear' });\n    }\n  };\n\n  // Zoom functions\n  const handleZoomIn = () => setZoom(prev => Math.min(prev + 10, 300));\n  const handleZoomOut = () => setZoom(prev => Math.max(prev - 10, 25));\n  const handleZoomReset = () => setZoom(100);\n\n  // Action buttons\n  const actionButtons = [\n    { name: 'library', icon: '📚', label: 'Library', onClick: () => setShowLibrary(true) },\n    { name: 'export', icon: '📤', label: 'Export', onClick: () => setShowExportImport(true) },\n    { name: 'undo', icon: '↶', label: 'Undo', onClick: handleUndo },\n    { name: 'redo', icon: '↷', label: 'Redo', onClick: handleRedo }\n  ];\n\n  return (\n    <div className=\"flex-1 flex flex-col bg-white\">\n      {/* Main Toolbar */}\n      <div className=\"bg-gray-50 border-b border-gray-200 p-3\">\n        <div className=\"flex items-center justify-between\">\n          {/* Left: Tools */}\n          <div className=\"flex items-center space-x-1\">\n            {tools.map((t) => (\n              <button\n                key={t.name}\n                onClick={() => setTool(t.name)}\n                className={`p-2 rounded-lg text-sm flex flex-col items-center min-w-[60px] ${\n                  tool === t.name\n                    ? 'bg-blue-500 text-white shadow-md'\n                    : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\n                }`}\n                title={t.label}\n              >\n                <span className=\"text-lg\">{t.icon}</span>\n                <span className=\"text-xs mt-1\">{t.label}</span>\n              </button>\n            ))}\n            \n            {/* Separator */}\n            <div className=\"w-px h-12 bg-gray-300 mx-2\"></div>\n            \n            {/* Action Buttons */}\n            {actionButtons.map((btn) => (\n              <button\n                key={btn.name}\n                onClick={btn.onClick}\n                className=\"p-2 rounded-lg text-sm flex flex-col items-center min-w-[60px] bg-white text-gray-700 border border-gray-300 hover:bg-gray-50\"\n                title={btn.label}\n              >\n                <span className=\"text-lg\">{btn.icon}</span>\n                <span className=\"text-xs mt-1\">{btn.label}</span>\n              </button>\n            ))}\n          </div>\n\n          {/* Center: Canvas Info */}\n          <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\n            <span>Elements: {elements.length}</span>\n            <span>Canvas: 1200×800</span>\n          </div>\n\n          {/* Right: Zoom Controls */}\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={handleZoomOut}\n              className=\"px-3 py-2 bg-white border border-gray-300 rounded text-sm hover:bg-gray-50\"\n              disabled={zoom <= 25}\n            >\n              −\n            </button>\n            <button\n              onClick={handleZoomReset}\n              className=\"px-4 py-2 bg-white border border-gray-300 rounded text-sm hover:bg-gray-50 min-w-[80px]\"\n            >\n              {zoom}%\n            </button>\n            <button\n              onClick={handleZoomIn}\n              className=\"px-3 py-2 bg-white border border-gray-300 rounded text-sm hover:bg-gray-50\"\n              disabled={zoom >= 300}\n            >\n              +\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Enhanced Properties Panel */}\n      <div className=\"bg-white border-b border-gray-200 p-4\">\n        <div className=\"flex items-center space-x-8 flex-wrap\">\n          {/* Stroke Color */}\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-sm font-medium text-gray-700\">Stroke:</label>\n            <div className=\"flex space-x-1\">\n              {colors.map((c) => (\n                <button\n                  key={c}\n                  onClick={() => setColor(c)}\n                  className={`w-7 h-7 rounded-full border-2 ${\n                    color === c ? 'border-blue-500 ring-2 ring-blue-200' : 'border-gray-300'\n                  }`}\n                  style={{ backgroundColor: c }}\n                />\n              ))}\n              <input\n                type=\"color\"\n                value={color}\n                onChange={(e) => setColor(e.target.value)}\n                className=\"w-7 h-7 rounded-full border-2 border-gray-300 cursor-pointer\"\n                title=\"Custom color\"\n              />\n            </div>\n          </div>\n\n          {/* Stroke Width */}\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-sm font-medium text-gray-700\">Width:</label>\n            <div className=\"flex space-x-1\">\n              {strokeWidths.map((width) => (\n                <button\n                  key={width}\n                  onClick={() => setStrokeWidth(width)}\n                  className={`px-3 py-1 rounded text-sm ${\n                    strokeWidth === width\n                      ? 'bg-blue-500 text-white'\n                      : 'bg-gray-100 text-gray-700 border border-gray-300 hover:bg-gray-200'\n                  }`}\n                >\n                  {width}\n                </button>\n              ))}\n            </div>\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"20\"\n              value={strokeWidth}\n              onChange={(e) => setStrokeWidth(parseInt(e.target.value))}\n              className=\"w-16\"\n            />\n            <span className=\"text-sm text-gray-600 min-w-[35px]\">{strokeWidth}px</span>\n          </div>\n\n          {/* Fill Style */}\n          {['rectangle', 'ellipse', 'diamond'].includes(tool) && (\n            <div className=\"flex items-center space-x-2\">\n              <label className=\"text-sm font-medium text-gray-700\">Fill:</label>\n              <div className=\"flex space-x-1\">\n                {fillStyles.map((style) => (\n                  <button\n                    key={style}\n                    onClick={() => setFillStyle(style)}\n                    className={`px-3 py-1 rounded text-sm capitalize ${\n                      fillStyle === style\n                        ? 'bg-green-500 text-white'\n                        : 'bg-gray-100 text-gray-700 border border-gray-300 hover:bg-gray-200'\n                    }`}\n                  >\n                    {style === 'transparent' ? 'None' : \n                     style === 'hachure' ? 'Hatch' :\n                     style === 'cross-hatch' ? 'Cross' : style}\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Stroke Style */}\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-sm font-medium text-gray-700\">Style:</label>\n            <select\n              value={strokeStyle}\n              onChange={(e) => setStrokeStyle(e.target.value)}\n              className=\"px-3 py-1 border border-gray-300 rounded text-sm\"\n            >\n              <option value=\"solid\">Solid</option>\n              <option value=\"dashed\">Dashed</option>\n              <option value=\"dotted\">Dotted</option>\n            </select>\n          </div>\n\n          {/* Roughness */}\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-sm font-medium text-gray-700\">Roughness:</label>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"3\"\n              step=\"0.5\"\n              value={roughness}\n              onChange={(e) => setRoughness(parseFloat(e.target.value))}\n              className=\"w-16\"\n            />\n            <span className=\"text-sm text-gray-600 min-w-[25px]\">{roughness}</span>\n          </div>\n\n          {/* Font controls for text */}\n          {tool === 'text' && (\n            <>\n              <div className=\"flex items-center space-x-2\">\n                <label className=\"text-sm font-medium text-gray-700\">Font:</label>\n                <select\n                  value={fontFamily}\n                  onChange={(e) => setFontFamily(e.target.value)}\n                  className=\"px-3 py-1 border border-gray-300 rounded text-sm\"\n                >\n                  {fontFamilies.map((font) => (\n                    <option key={font} value={font}>\n                      {font}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <label className=\"text-sm font-medium text-gray-700\">Size:</label>\n                <input\n                  type=\"number\"\n                  value={fontSize}\n                  onChange={(e) => setFontSize(parseInt(e.target.value))}\n                  className=\"w-16 px-2 py-1 border border-gray-300 rounded text-sm\"\n                  min=\"8\"\n                  max=\"72\"\n                />\n              </div>\n            </>\n          )}\n\n          {/* Opacity */}\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-sm font-medium text-gray-700\">Opacity:</label>\n            <input\n              type=\"range\"\n              min=\"10\"\n              max=\"100\"\n              value={opacity}\n              onChange={(e) => setOpacity(parseInt(e.target.value))}\n              className=\"w-20\"\n            />\n            <span className=\"text-sm text-gray-600 min-w-[35px]\">{opacity}%</span>\n          </div>\n\n          {/* Clear button */}\n          <button\n            onClick={clearCanvas}\n            className=\"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 text-sm font-medium\"\n          >\n            🗑️ Clear All\n          </button>\n        </div>\n      </div>\n\n      {/* Canvas Area */}\n      <div className=\"flex-1 relative overflow-auto bg-gray-100\">\n        <div className=\"p-8 flex justify-center\">\n          <div \n            className=\"bg-white shadow-lg\"\n            style={{ transform: `scale(${zoom / 100})`, transformOrigin: 'top left' }}\n          >\n            <canvas\n              ref={canvasRef}\n              onMouseDown={handleMouseDown}\n              onMouseMove={handleMouseMove}\n              onMouseUp={handleMouseUp}\n              onMouseLeave={handleMouseUp}\n              className=\"border border-gray-300 cursor-crosshair\"\n              style={{\n                cursor: tool === 'hand' ? 'grab' : \n                       tool === 'selection' ? 'default' :\n                       tool === 'text' ? 'text' : 'crosshair'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Text Input Modal */}\n      {isTyping && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl\">\n            <h3 className=\"text-lg font-medium mb-4\">Add Text</h3>\n            <textarea\n              value={textInput}\n              onChange={(e) => setTextInput(e.target.value)}\n              className=\"w-80 h-32 p-3 border border-gray-300 rounded resize-none focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Type your text here...\"\n              autoFocus\n            />\n            <div className=\"flex justify-end space-x-3 mt-4\">\n              <button\n                onClick={() => {\n                  setIsTyping(false);\n                  setTextInput('');\n                  setTextPosition(null);\n                }}\n                className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded hover:bg-gray-50\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleTextSubmit}\n                className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n              >\n                Add Text\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      {/* Library Panel */}\n      <LibraryPanel\n        isOpen={showLibrary}\n        onClose={() => setShowLibrary(false)}\n        onAddShape={(shape) => {\n          // Add shape to canvas at center\n          const centerX = canvasRef.current.width / 2;\n          const centerY = canvasRef.current.height / 2;\n          const newElement = {\n            id: generateId(),\n            type: shape.type,\n            startX: centerX - 50,\n            startY: centerY - 25,\n            endX: centerX + 50,\n            endY: centerY + 25,\n            color,\n            strokeWidth,\n            fillStyle,\n            opacity,\n            roughness\n          };\n          \n          const newElements = [...elements, newElement];\n          setElements(newElements);\n          saveToHistory(newElements);\n          redrawCanvas(newElements);\n        }}\n      />\n\n      {/* Export/Import Panel */}\n      <ExportImportPanel\n        isOpen={showExportImport}\n        onClose={() => setShowExportImport(false)}\n        elements={elements}\n        onExport={() => {}}\n        onImport={(importedElements) => {\n          const newElements = [...elements, ...importedElements];\n          setElements(newElements);\n          saveToHistory(newElements);\n          redrawCanvas(newElements);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ExcalidrawCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}