{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport const useWorkspace = roomId => {\n  _s();\n  const [workspaceData, setWorkspaceData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadWorkspaceData = async () => {\n      if (!roomId) return;\n      try {\n        setLoading(true);\n        const response = await fetch(`${process.env.REACT_APP_SERVER_URL || 'http://localhost:5000'}/api/workspace/${roomId}`);\n        if (!response.ok) {\n          throw new Error('Failed to load workspace data');\n        }\n        const data = await response.json();\n        if (data.success) {\n          setWorkspaceData(data.workspace);\n        } else {\n          throw new Error(data.message || 'Unknown error');\n        }\n      } catch (err) {\n        console.error('Error loading workspace:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadWorkspaceData();\n  }, [roomId]);\n  const createWorkspace = async (name, owner) => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL || 'http://localhost:5000'}/api/workspace`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          owner\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create workspace');\n      }\n      const data = await response.json();\n      if (data.success) {\n        return data.workspace;\n      } else {\n        throw new Error(data.message || 'Unknown error');\n      }\n    } catch (err) {\n      console.error('Error creating workspace:', err);\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    workspaceData,\n    loading,\n    error,\n    createWorkspace\n  };\n};\n_s(useWorkspace, \"p0Gd+pTIP/xlpa+qwt16l0tAXzw=\");","map":{"version":3,"names":["useState","useEffect","useWorkspace","roomId","_s","workspaceData","setWorkspaceData","loading","setLoading","error","setError","loadWorkspaceData","response","fetch","process","env","REACT_APP_SERVER_URL","ok","Error","data","json","success","workspace","message","err","console","createWorkspace","name","owner","method","headers","body","JSON","stringify"],"sources":["/home/piyush/Desktop/collabdraw/realtime-workspace/client/src/sockets/useWorkspace.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const useWorkspace = (roomId) => {\n  const [workspaceData, setWorkspaceData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadWorkspaceData = async () => {\n      if (!roomId) return;\n\n      try {\n        setLoading(true);\n        const response = await fetch(\n          `${process.env.REACT_APP_SERVER_URL || 'http://localhost:5000'}/api/workspace/${roomId}`\n        );\n        \n        if (!response.ok) {\n          throw new Error('Failed to load workspace data');\n        }\n        \n        const data = await response.json();\n        \n        if (data.success) {\n          setWorkspaceData(data.workspace);\n        } else {\n          throw new Error(data.message || 'Unknown error');\n        }\n      } catch (err) {\n        console.error('Error loading workspace:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadWorkspaceData();\n  }, [roomId]);\n\n  const createWorkspace = async (name, owner) => {\n    try {\n      setLoading(true);\n      const response = await fetch(\n        `${process.env.REACT_APP_SERVER_URL || 'http://localhost:5000'}/api/workspace`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ name, owner }),\n        }\n      );\n      \n      if (!response.ok) {\n        throw new Error('Failed to create workspace');\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        return data.workspace;\n      } else {\n        throw new Error(data.message || 'Unknown error');\n      }\n    } catch (err) {\n      console.error('Error creating workspace:', err);\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return {\n    workspaceData,\n    loading,\n    error,\n    createWorkspace\n  };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,MAAMC,YAAY,GAAIC,MAAM,IAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI,CAACR,MAAM,EAAE;MAEb,IAAI;QACFK,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,IAAI,uBAAuB,kBAAkBb,MAAM,EACxF,CAAC;QAED,IAAI,CAACS,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;QAClD;QAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAElC,IAAID,IAAI,CAACE,OAAO,EAAE;UAChBf,gBAAgB,CAACa,IAAI,CAACG,SAAS,CAAC;QAClC,CAAC,MAAM;UACL,MAAM,IAAIJ,KAAK,CAACC,IAAI,CAACI,OAAO,IAAI,eAAe,CAAC;QAClD;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAAChB,KAAK,CAAC,0BAA0B,EAAEe,GAAG,CAAC;QAC9Cd,QAAQ,CAACc,GAAG,CAACD,OAAO,CAAC;MACvB,CAAC,SAAS;QACRf,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,MAAMuB,eAAe,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,KAAK;IAC7C,IAAI;MACFpB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,IAAI,uBAAuB,gBAAgB,EAC9E;QACEa,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEN,IAAI;UAAEC;QAAM,CAAC;MACtC,CACF,CAAC;MAED,IAAI,CAAChB,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChB,OAAOF,IAAI,CAACG,SAAS;MACvB,CAAC,MAAM;QACL,MAAM,IAAIJ,KAAK,CAACC,IAAI,CAACI,OAAO,IAAI,eAAe,CAAC;MAClD;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAAChB,KAAK,CAAC,2BAA2B,EAAEe,GAAG,CAAC;MAC/Cd,QAAQ,CAACc,GAAG,CAACD,OAAO,CAAC;MACrB,MAAMC,GAAG;IACX,CAAC,SAAS;MACRhB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IACLH,aAAa;IACbE,OAAO;IACPE,KAAK;IACLiB;EACF,CAAC;AACH,CAAC;AAACtB,EAAA,CA7EWF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}