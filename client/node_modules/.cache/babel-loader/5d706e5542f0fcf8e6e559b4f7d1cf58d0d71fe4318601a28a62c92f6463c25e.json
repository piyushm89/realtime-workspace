{"ast":null,"code":"var _jsxFileName = \"/home/piyush/Desktop/collabdraw/realtime-workspace/client/src/components/ExcalidrawCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExcalidrawCanvas = ({\n  socket,\n  workspaceData\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [tool, setTool] = useState('selection');\n  const [color, setColor] = useState('#000000');\n  const [strokeWidth, setStrokeWidth] = useState(2);\n  const [fillStyle, setFillStyle] = useState('transparent');\n  const [opacity, setOpacity] = useState(100);\n  const [fontSize, setFontSize] = useState(20);\n  const [fontFamily, setFontFamily] = useState('Arial');\n  const [zoom, setZoom] = useState(100);\n  const [startPoint, setStartPoint] = useState(null);\n  const [currentShape, setCurrentShape] = useState('rectangle');\n  const [isTyping, setIsTyping] = useState(false);\n  const [textInput, setTextInput] = useState('');\n  const [textPosition, setTextPosition] = useState(null);\n  const [roughness, setRoughness] = useState(1);\n  const [strokeStyle, setStrokeStyle] = useState('solid');\n  const [arrowType, setArrowType] = useState('none');\n  const [elements, setElements] = useState([]);\n\n  // Tools available\n  const tools = [{\n    name: 'selection',\n    icon: '↖️',\n    label: 'Selection'\n  }, {\n    name: 'hand',\n    icon: '✋',\n    label: 'Hand'\n  }, {\n    name: 'rectangle',\n    icon: '⬜',\n    label: 'Rectangle'\n  }, {\n    name: 'diamond',\n    icon: '💎',\n    label: 'Diamond'\n  }, {\n    name: 'ellipse',\n    icon: '⭕',\n    label: 'Ellipse'\n  }, {\n    name: 'arrow',\n    icon: '➡️',\n    label: 'Arrow'\n  }, {\n    name: 'line',\n    icon: '📏',\n    label: 'Line'\n  }, {\n    name: 'draw',\n    icon: '✏️',\n    label: 'Draw'\n  }, {\n    name: 'text',\n    icon: '📝',\n    label: 'Text'\n  }, {\n    name: 'image',\n    icon: '🖼️',\n    label: 'Image'\n  }, {\n    name: 'eraser',\n    icon: '🧽',\n    label: 'Eraser'\n  }];\n\n  // Colors\n  const colors = ['#000000', '#e03131', '#2f9e44', '#1971c2', '#f08c00', '#e64980', '#7950f2', '#495057', '#ffffff', '#fab005'];\n\n  // Stroke widths\n  const strokeWidths = [1, 2, 4, 8];\n\n  // Fill styles\n  const fillStyles = ['transparent', 'solid', 'hachure', 'cross-hatch'];\n\n  // Font families\n  const fontFamilies = ['Arial', 'Helvetica', 'Georgia', 'Times', 'Courier'];\n\n  // Initialize canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    canvas.width = 1200;\n    canvas.height = 800;\n    const ctx = canvas.getContext('2d');\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n\n    // White background\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    console.log('Enhanced Canvas initialized');\n  }, []);\n\n  // Get canvas coordinates\n  const getCanvasPoint = useCallback(e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (e.clientX - rect.left) * scaleX,\n      y: (e.clientY - rect.top) * scaleY\n    };\n  }, []);\n\n  // Generate unique ID for elements\n  const generateId = () => Math.random().toString(36).substring(2, 15);\n\n  // Drawing functions\n  const drawRoughRectangle = (ctx, x, y, width, height, options = {}) => {\n    const {\n      strokeColor = '#000',\n      fillColor = 'transparent',\n      strokeWidth = 2,\n      roughness = 1\n    } = options;\n    ctx.strokeStyle = strokeColor;\n    ctx.fillStyle = fillColor;\n    ctx.lineWidth = strokeWidth;\n    if (roughness > 0) {\n      // Add roughness effect\n      const offset = roughness * 2;\n      ctx.beginPath();\n      ctx.moveTo(x + Math.random() * offset, y + Math.random() * offset);\n      ctx.lineTo(x + width + Math.random() * offset, y + Math.random() * offset);\n      ctx.lineTo(x + width + Math.random() * offset, y + height + Math.random() * offset);\n      ctx.lineTo(x + Math.random() * offset, y + height + Math.random() * offset);\n      ctx.closePath();\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n    if (fillColor !== 'transparent') ctx.fill();\n    ctx.stroke();\n  };\n  const drawRoughEllipse = (ctx, centerX, centerY, radiusX, radiusY, options = {}) => {\n    const {\n      strokeColor = '#000',\n      fillColor = 'transparent',\n      strokeWidth = 2,\n      roughness = 1\n    } = options;\n    ctx.strokeStyle = strokeColor;\n    ctx.fillStyle = fillColor;\n    ctx.lineWidth = strokeWidth;\n    ctx.beginPath();\n    if (roughness > 0) {\n      // Rough ellipse approximation\n      const steps = 32;\n      for (let i = 0; i <= steps; i++) {\n        const angle = i / steps * 2 * Math.PI;\n        const x = centerX + Math.cos(angle) * radiusX + (Math.random() - 0.5) * roughness * 2;\n        const y = centerY + Math.sin(angle) * radiusY + (Math.random() - 0.5) * roughness * 2;\n        if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      }\n    } else {\n      ctx.ellipse(centerX, centerY, radiusX, radiusY, 0, 0, 2 * Math.PI);\n    }\n    if (fillColor !== 'transparent') ctx.fill();\n    ctx.stroke();\n  };\n  const drawArrow = (ctx, startX, startY, endX, endY, options = {}) => {\n    const {\n      strokeColor = '#000',\n      strokeWidth = 2\n    } = options;\n    ctx.strokeStyle = strokeColor;\n    ctx.lineWidth = strokeWidth;\n\n    // Draw line\n    ctx.beginPath();\n    ctx.moveTo(startX, startY);\n    ctx.lineTo(endX, endY);\n    ctx.stroke();\n\n    // Draw arrowhead\n    const angle = Math.atan2(endY - startY, endX - startX);\n    const headLength = 15;\n    ctx.beginPath();\n    ctx.moveTo(endX, endY);\n    ctx.lineTo(endX - headLength * Math.cos(angle - Math.PI / 6), endY - headLength * Math.sin(angle - Math.PI / 6));\n    ctx.moveTo(endX, endY);\n    ctx.lineTo(endX - headLength * Math.cos(angle + Math.PI / 6), endY - headLength * Math.sin(angle + Math.PI / 6));\n    ctx.stroke();\n  };\n  const drawDiamond = (ctx, centerX, centerY, width, height, options = {}) => {\n    const {\n      strokeColor = '#000',\n      fillColor = 'transparent',\n      strokeWidth = 2\n    } = options;\n    ctx.strokeStyle = strokeColor;\n    ctx.fillStyle = fillColor;\n    ctx.lineWidth = strokeWidth;\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY - height / 2);\n    ctx.lineTo(centerX + width / 2, centerY);\n    ctx.lineTo(centerX, centerY + height / 2);\n    ctx.lineTo(centerX - width / 2, centerY);\n    ctx.closePath();\n    if (fillColor !== 'transparent') ctx.fill();\n    ctx.stroke();\n  };\n\n  // Event handlers\n  const handleMouseDown = e => {\n    const point = getCanvasPoint(e);\n    setIsDrawing(true);\n    setStartPoint(point);\n    if (tool === 'text') {\n      setTextPosition(point);\n      setIsTyping(true);\n      return;\n    }\n    if (tool === 'draw') {\n      const ctx = canvasRef.current.getContext('2d');\n      ctx.beginPath();\n      ctx.moveTo(point.x, point.y);\n      ctx.strokeStyle = color;\n      ctx.lineWidth = strokeWidth;\n      ctx.globalAlpha = opacity / 100;\n    }\n\n    // Emit start event\n    if (socket) {\n      socket.emit('draw-event', {\n        type: 'start',\n        tool,\n        x: point.x,\n        y: point.y,\n        color,\n        strokeWidth,\n        opacity\n      });\n    }\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing || !startPoint) return;\n    const point = getCanvasPoint(e);\n    const ctx = canvasRef.current.getContext('2d');\n    if (tool === 'draw') {\n      ctx.lineTo(point.x, point.y);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(point.x, point.y);\n      if (socket) {\n        socket.emit('draw-event', {\n          type: 'draw',\n          tool,\n          x: point.x,\n          y: point.y,\n          color,\n          strokeWidth,\n          opacity\n        });\n      }\n    }\n  };\n  const handleMouseUp = e => {\n    if (!isDrawing || !startPoint) return;\n    const point = getCanvasPoint(e);\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.globalAlpha = opacity / 100;\n    const options = {\n      strokeColor: color,\n      fillColor: fillStyle === 'transparent' ? 'transparent' : color,\n      strokeWidth,\n      roughness\n    };\n    let elementData = {\n      id: generateId(),\n      type: tool,\n      startX: startPoint.x,\n      startY: startPoint.y,\n      endX: point.x,\n      endY: point.y,\n      color,\n      strokeWidth,\n      fillStyle,\n      opacity,\n      roughness\n    };\n    switch (tool) {\n      case 'rectangle':\n        const width = point.x - startPoint.x;\n        const height = point.y - startPoint.y;\n        drawRoughRectangle(ctx, startPoint.x, startPoint.y, width, height, options);\n        break;\n      case 'ellipse':\n        const centerX = (startPoint.x + point.x) / 2;\n        const centerY = (startPoint.y + point.y) / 2;\n        const radiusX = Math.abs(point.x - startPoint.x) / 2;\n        const radiusY = Math.abs(point.y - startPoint.y) / 2;\n        drawRoughEllipse(ctx, centerX, centerY, radiusX, radiusY, options);\n        break;\n      case 'diamond':\n        const diamondCenterX = (startPoint.x + point.x) / 2;\n        const diamondCenterY = (startPoint.y + point.y) / 2;\n        const diamondWidth = Math.abs(point.x - startPoint.x);\n        const diamondHeight = Math.abs(point.y - startPoint.y);\n        drawDiamond(ctx, diamondCenterX, diamondCenterY, diamondWidth, diamondHeight, options);\n        break;\n      case 'arrow':\n        drawArrow(ctx, startPoint.x, startPoint.y, point.x, point.y, options);\n        break;\n      case 'line':\n        ctx.beginPath();\n        ctx.strokeStyle = color;\n        ctx.lineWidth = strokeWidth;\n        ctx.moveTo(startPoint.x, startPoint.y);\n        ctx.lineTo(point.x, point.y);\n        ctx.stroke();\n        break;\n      case 'eraser':\n        // Eraser logic handled in mousemove\n        break;\n    }\n\n    // Add element to history\n    if (tool !== 'draw' && tool !== 'eraser') {\n      setElements(prev => [...prev, elementData]);\n    }\n\n    // Emit to socket\n    if (socket && tool !== 'draw') {\n      socket.emit('draw-event', {\n        type: 'shape',\n        ...elementData\n      });\n    }\n    setIsDrawing(false);\n    setStartPoint(null);\n    ctx.globalAlpha = 1;\n  };\n\n  // Text handling\n  const handleTextSubmit = () => {\n    if (!textInput.trim() || !textPosition) return;\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.font = `${fontSize}px ${fontFamily}`;\n    ctx.fillStyle = color;\n    ctx.globalAlpha = opacity / 100;\n    ctx.fillText(textInput, textPosition.x, textPosition.y);\n    ctx.globalAlpha = 1;\n    const textElement = {\n      id: generateId(),\n      type: 'text',\n      x: textPosition.x,\n      y: textPosition.y,\n      text: textInput,\n      fontSize,\n      fontFamily,\n      color,\n      opacity\n    };\n    setElements(prev => [...prev, textElement]);\n    if (socket) {\n      socket.emit('draw-event', {\n        type: 'text',\n        ...textElement\n      });\n    }\n    setTextInput('');\n    setIsTyping(false);\n    setTextPosition(null);\n  };\n\n  // Clear canvas\n  const clearCanvas = () => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setElements([]);\n    if (socket) {\n      socket.emit('draw-event', {\n        type: 'clear'\n      });\n    }\n  };\n\n  // Zoom functions\n  const handleZoomIn = () => setZoom(prev => Math.min(prev + 10, 300));\n  const handleZoomOut = () => setZoom(prev => Math.max(prev - 10, 25));\n  const handleZoomReset = () => setZoom(100);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 flex flex-col bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-50 border-b border-gray-200 p-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: tools.map(t => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setTool(t.name),\n            className: `p-2 rounded-lg text-sm flex flex-col items-center min-w-[50px] ${tool === t.name ? 'bg-blue-500 text-white' : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'}`,\n            title: t.label,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg\",\n              children: t.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs mt-1\",\n              children: t.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this)]\n          }, t.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleZoomOut,\n            className: \"px-2 py-1 bg-white border border-gray-300 rounded text-sm hover:bg-gray-50\",\n            children: \"\\u2212\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleZoomReset,\n            className: \"px-3 py-1 bg-white border border-gray-300 rounded text-sm hover:bg-gray-50\",\n            children: [zoom, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleZoomIn,\n            className: \"px-2 py-1 bg-white border border-gray-300 rounded text-sm hover:bg-gray-50\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white border-b border-gray-200 p-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-6 flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Stroke:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-1\",\n            children: colors.map(c => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setColor(c),\n              className: `w-6 h-6 rounded border-2 ${color === c ? 'border-blue-500' : 'border-gray-300'}`,\n              style: {\n                backgroundColor: c\n              }\n            }, c, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Width:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-1\",\n            children: strokeWidths.map(width => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setStrokeWidth(width),\n              className: `px-2 py-1 rounded text-xs ${strokeWidth === width ? 'bg-blue-500 text-white' : 'bg-gray-100 text-gray-700 border border-gray-300'}`,\n              children: [width, \"px\"]\n            }, width, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), ['rectangle', 'ellipse', 'diamond'].includes(tool) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Fill:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: fillStyle,\n            onChange: e => setFillStyle(e.target.value),\n            className: \"px-2 py-1 border border-gray-300 rounded text-sm\",\n            children: fillStyles.map(style => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: style,\n              children: style\n            }, style, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this), tool === 'text' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-sm font-medium text-gray-700\",\n              children: \"Font:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: fontFamily,\n              onChange: e => setFontFamily(e.target.value),\n              className: \"px-2 py-1 border border-gray-300 rounded text-sm\",\n              children: fontFamilies.map(font => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: font,\n                children: font\n              }, font, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-sm font-medium text-gray-700\",\n              children: \"Size:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: fontSize,\n              onChange: e => setFontSize(parseInt(e.target.value)),\n              className: \"w-16 px-2 py-1 border border-gray-300 rounded text-sm\",\n              min: \"8\",\n              max: \"72\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Opacity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"10\",\n            max: \"100\",\n            value: opacity,\n            onChange: e => setOpacity(parseInt(e.target.value)),\n            className: \"w-20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: [opacity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearCanvas,\n          className: \"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 text-sm\",\n          children: \"\\uD83D\\uDDD1\\uFE0F Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 relative overflow-auto bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8 flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white shadow-lg\",\n          style: {\n            transform: `scale(${zoom / 100})`,\n            transformOrigin: 'top left'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            onMouseDown: handleMouseDown,\n            onMouseMove: handleMouseMove,\n            onMouseUp: handleMouseUp,\n            onMouseLeave: handleMouseUp,\n            className: \"border border-gray-300 cursor-crosshair\",\n            style: {\n              cursor: tool === 'hand' ? 'grab' : tool === 'selection' ? 'default' : tool === 'text' ? 'text' : 'crosshair'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 7\n    }, this), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium mb-4\",\n          children: \"Add Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: textInput,\n          onChange: e => setTextInput(e.target.value),\n          className: \"w-80 h-32 p-3 border border-gray-300 rounded resize-none focus:outline-none focus:ring-2 focus:ring-blue-500\",\n          placeholder: \"Type your text here...\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-3 mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setIsTyping(false);\n              setTextInput('');\n              setTextPosition(null);\n            },\n            className: \"px-4 py-2 text-gray-600 border border-gray-300 rounded hover:bg-gray-50\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleTextSubmit,\n            className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n            children: \"Add Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 392,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcalidrawCanvas, \"kQPNMCjCAqc4SV0N7rBPxNRFuuE=\");\n_c = ExcalidrawCanvas;\nexport default ExcalidrawCanvas;\nvar _c;\n$RefreshReg$(_c, \"ExcalidrawCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","ExcalidrawCanvas","socket","workspaceData","_s","canvasRef","isDrawing","setIsDrawing","tool","setTool","color","setColor","strokeWidth","setStrokeWidth","fillStyle","setFillStyle","opacity","setOpacity","fontSize","setFontSize","fontFamily","setFontFamily","zoom","setZoom","startPoint","setStartPoint","currentShape","setCurrentShape","isTyping","setIsTyping","textInput","setTextInput","textPosition","setTextPosition","roughness","setRoughness","strokeStyle","setStrokeStyle","arrowType","setArrowType","elements","setElements","tools","name","icon","label","colors","strokeWidths","fillStyles","fontFamilies","canvas","current","width","height","ctx","getContext","lineCap","lineJoin","fillRect","console","log","getCanvasPoint","e","rect","getBoundingClientRect","scaleX","scaleY","x","clientX","left","y","clientY","top","generateId","Math","random","toString","substring","drawRoughRectangle","options","strokeColor","fillColor","lineWidth","offset","beginPath","moveTo","lineTo","closePath","fill","stroke","drawRoughEllipse","centerX","centerY","radiusX","radiusY","steps","i","angle","PI","cos","sin","ellipse","drawArrow","startX","startY","endX","endY","atan2","headLength","drawDiamond","handleMouseDown","point","globalAlpha","emit","type","handleMouseMove","handleMouseUp","elementData","id","abs","diamondCenterX","diamondCenterY","diamondWidth","diamondHeight","prev","handleTextSubmit","trim","font","fillText","textElement","text","clearCanvas","clearRect","handleZoomIn","min","handleZoomOut","max","handleZoomReset","className","children","map","t","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","c","style","backgroundColor","includes","value","onChange","target","parseInt","transform","transformOrigin","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","cursor","placeholder","autoFocus","_c","$RefreshReg$"],"sources":["/home/piyush/Desktop/collabdraw/realtime-workspace/client/src/components/ExcalidrawCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\n\nconst ExcalidrawCanvas = ({ socket, workspaceData }) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [tool, setTool] = useState('selection');\n  const [color, setColor] = useState('#000000');\n  const [strokeWidth, setStrokeWidth] = useState(2);\n  const [fillStyle, setFillStyle] = useState('transparent');\n  const [opacity, setOpacity] = useState(100);\n  const [fontSize, setFontSize] = useState(20);\n  const [fontFamily, setFontFamily] = useState('Arial');\n  const [zoom, setZoom] = useState(100);\n  const [startPoint, setStartPoint] = useState(null);\n  const [currentShape, setCurrentShape] = useState('rectangle');\n  const [isTyping, setIsTyping] = useState(false);\n  const [textInput, setTextInput] = useState('');\n  const [textPosition, setTextPosition] = useState(null);\n  const [roughness, setRoughness] = useState(1);\n  const [strokeStyle, setStrokeStyle] = useState('solid');\n  const [arrowType, setArrowType] = useState('none');\n  const [elements, setElements] = useState([]);\n\n  // Tools available\n  const tools = [\n    { name: 'selection', icon: '↖️', label: 'Selection' },\n    { name: 'hand', icon: '✋', label: 'Hand' },\n    { name: 'rectangle', icon: '⬜', label: 'Rectangle' },\n    { name: 'diamond', icon: '💎', label: 'Diamond' },\n    { name: 'ellipse', icon: '⭕', label: 'Ellipse' },\n    { name: 'arrow', icon: '➡️', label: 'Arrow' },\n    { name: 'line', icon: '📏', label: 'Line' },\n    { name: 'draw', icon: '✏️', label: 'Draw' },\n    { name: 'text', icon: '📝', label: 'Text' },\n    { name: 'image', icon: '🖼️', label: 'Image' },\n    { name: 'eraser', icon: '🧽', label: 'Eraser' }\n  ];\n\n  // Colors\n  const colors = [\n    '#000000', '#e03131', '#2f9e44', '#1971c2', '#f08c00',\n    '#e64980', '#7950f2', '#495057', '#ffffff', '#fab005'\n  ];\n\n  // Stroke widths\n  const strokeWidths = [1, 2, 4, 8];\n\n  // Fill styles\n  const fillStyles = ['transparent', 'solid', 'hachure', 'cross-hatch'];\n\n  // Font families\n  const fontFamilies = ['Arial', 'Helvetica', 'Georgia', 'Times', 'Courier'];\n\n  // Initialize canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    canvas.width = 1200;\n    canvas.height = 800;\n    \n    const ctx = canvas.getContext('2d');\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    \n    // White background\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    \n    console.log('Enhanced Canvas initialized');\n  }, []);\n\n  // Get canvas coordinates\n  const getCanvasPoint = useCallback((e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    return {\n      x: (e.clientX - rect.left) * scaleX,\n      y: (e.clientY - rect.top) * scaleY\n    };\n  }, []);\n\n  // Generate unique ID for elements\n  const generateId = () => Math.random().toString(36).substring(2, 15);\n\n  // Drawing functions\n  const drawRoughRectangle = (ctx, x, y, width, height, options = {}) => {\n    const { strokeColor = '#000', fillColor = 'transparent', strokeWidth = 2, roughness = 1 } = options;\n    \n    ctx.strokeStyle = strokeColor;\n    ctx.fillStyle = fillColor;\n    ctx.lineWidth = strokeWidth;\n    \n    if (roughness > 0) {\n      // Add roughness effect\n      const offset = roughness * 2;\n      ctx.beginPath();\n      ctx.moveTo(x + Math.random() * offset, y + Math.random() * offset);\n      ctx.lineTo(x + width + Math.random() * offset, y + Math.random() * offset);\n      ctx.lineTo(x + width + Math.random() * offset, y + height + Math.random() * offset);\n      ctx.lineTo(x + Math.random() * offset, y + height + Math.random() * offset);\n      ctx.closePath();\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n    \n    if (fillColor !== 'transparent') ctx.fill();\n    ctx.stroke();\n  };\n\n  const drawRoughEllipse = (ctx, centerX, centerY, radiusX, radiusY, options = {}) => {\n    const { strokeColor = '#000', fillColor = 'transparent', strokeWidth = 2, roughness = 1 } = options;\n    \n    ctx.strokeStyle = strokeColor;\n    ctx.fillStyle = fillColor;\n    ctx.lineWidth = strokeWidth;\n    \n    ctx.beginPath();\n    if (roughness > 0) {\n      // Rough ellipse approximation\n      const steps = 32;\n      for (let i = 0; i <= steps; i++) {\n        const angle = (i / steps) * 2 * Math.PI;\n        const x = centerX + Math.cos(angle) * radiusX + (Math.random() - 0.5) * roughness * 2;\n        const y = centerY + Math.sin(angle) * radiusY + (Math.random() - 0.5) * roughness * 2;\n        if (i === 0) ctx.moveTo(x, y);\n        else ctx.lineTo(x, y);\n      }\n    } else {\n      ctx.ellipse(centerX, centerY, radiusX, radiusY, 0, 0, 2 * Math.PI);\n    }\n    \n    if (fillColor !== 'transparent') ctx.fill();\n    ctx.stroke();\n  };\n\n  const drawArrow = (ctx, startX, startY, endX, endY, options = {}) => {\n    const { strokeColor = '#000', strokeWidth = 2 } = options;\n    \n    ctx.strokeStyle = strokeColor;\n    ctx.lineWidth = strokeWidth;\n    \n    // Draw line\n    ctx.beginPath();\n    ctx.moveTo(startX, startY);\n    ctx.lineTo(endX, endY);\n    ctx.stroke();\n    \n    // Draw arrowhead\n    const angle = Math.atan2(endY - startY, endX - startX);\n    const headLength = 15;\n    \n    ctx.beginPath();\n    ctx.moveTo(endX, endY);\n    ctx.lineTo(\n      endX - headLength * Math.cos(angle - Math.PI / 6),\n      endY - headLength * Math.sin(angle - Math.PI / 6)\n    );\n    ctx.moveTo(endX, endY);\n    ctx.lineTo(\n      endX - headLength * Math.cos(angle + Math.PI / 6),\n      endY - headLength * Math.sin(angle + Math.PI / 6)\n    );\n    ctx.stroke();\n  };\n\n  const drawDiamond = (ctx, centerX, centerY, width, height, options = {}) => {\n    const { strokeColor = '#000', fillColor = 'transparent', strokeWidth = 2 } = options;\n    \n    ctx.strokeStyle = strokeColor;\n    ctx.fillStyle = fillColor;\n    ctx.lineWidth = strokeWidth;\n    \n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY - height / 2);\n    ctx.lineTo(centerX + width / 2, centerY);\n    ctx.lineTo(centerX, centerY + height / 2);\n    ctx.lineTo(centerX - width / 2, centerY);\n    ctx.closePath();\n    \n    if (fillColor !== 'transparent') ctx.fill();\n    ctx.stroke();\n  };\n\n  // Event handlers\n  const handleMouseDown = (e) => {\n    const point = getCanvasPoint(e);\n    setIsDrawing(true);\n    setStartPoint(point);\n\n    if (tool === 'text') {\n      setTextPosition(point);\n      setIsTyping(true);\n      return;\n    }\n\n    if (tool === 'draw') {\n      const ctx = canvasRef.current.getContext('2d');\n      ctx.beginPath();\n      ctx.moveTo(point.x, point.y);\n      ctx.strokeStyle = color;\n      ctx.lineWidth = strokeWidth;\n      ctx.globalAlpha = opacity / 100;\n    }\n\n    // Emit start event\n    if (socket) {\n      socket.emit('draw-event', {\n        type: 'start',\n        tool,\n        x: point.x,\n        y: point.y,\n        color,\n        strokeWidth,\n        opacity\n      });\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isDrawing || !startPoint) return;\n\n    const point = getCanvasPoint(e);\n    const ctx = canvasRef.current.getContext('2d');\n\n    if (tool === 'draw') {\n      ctx.lineTo(point.x, point.y);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(point.x, point.y);\n\n      if (socket) {\n        socket.emit('draw-event', {\n          type: 'draw',\n          tool,\n          x: point.x,\n          y: point.y,\n          color,\n          strokeWidth,\n          opacity\n        });\n      }\n    }\n  };\n\n  const handleMouseUp = (e) => {\n    if (!isDrawing || !startPoint) return;\n\n    const point = getCanvasPoint(e);\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.globalAlpha = opacity / 100;\n\n    const options = {\n      strokeColor: color,\n      fillColor: fillStyle === 'transparent' ? 'transparent' : color,\n      strokeWidth,\n      roughness\n    };\n\n    let elementData = {\n      id: generateId(),\n      type: tool,\n      startX: startPoint.x,\n      startY: startPoint.y,\n      endX: point.x,\n      endY: point.y,\n      color,\n      strokeWidth,\n      fillStyle,\n      opacity,\n      roughness\n    };\n\n    switch (tool) {\n      case 'rectangle':\n        const width = point.x - startPoint.x;\n        const height = point.y - startPoint.y;\n        drawRoughRectangle(ctx, startPoint.x, startPoint.y, width, height, options);\n        break;\n\n      case 'ellipse':\n        const centerX = (startPoint.x + point.x) / 2;\n        const centerY = (startPoint.y + point.y) / 2;\n        const radiusX = Math.abs(point.x - startPoint.x) / 2;\n        const radiusY = Math.abs(point.y - startPoint.y) / 2;\n        drawRoughEllipse(ctx, centerX, centerY, radiusX, radiusY, options);\n        break;\n\n      case 'diamond':\n        const diamondCenterX = (startPoint.x + point.x) / 2;\n        const diamondCenterY = (startPoint.y + point.y) / 2;\n        const diamondWidth = Math.abs(point.x - startPoint.x);\n        const diamondHeight = Math.abs(point.y - startPoint.y);\n        drawDiamond(ctx, diamondCenterX, diamondCenterY, diamondWidth, diamondHeight, options);\n        break;\n\n      case 'arrow':\n        drawArrow(ctx, startPoint.x, startPoint.y, point.x, point.y, options);\n        break;\n\n      case 'line':\n        ctx.beginPath();\n        ctx.strokeStyle = color;\n        ctx.lineWidth = strokeWidth;\n        ctx.moveTo(startPoint.x, startPoint.y);\n        ctx.lineTo(point.x, point.y);\n        ctx.stroke();\n        break;\n\n      case 'eraser':\n        // Eraser logic handled in mousemove\n        break;\n    }\n\n    // Add element to history\n    if (tool !== 'draw' && tool !== 'eraser') {\n      setElements(prev => [...prev, elementData]);\n    }\n\n    // Emit to socket\n    if (socket && tool !== 'draw') {\n      socket.emit('draw-event', {\n        type: 'shape',\n        ...elementData\n      });\n    }\n\n    setIsDrawing(false);\n    setStartPoint(null);\n    ctx.globalAlpha = 1;\n  };\n\n  // Text handling\n  const handleTextSubmit = () => {\n    if (!textInput.trim() || !textPosition) return;\n\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.font = `${fontSize}px ${fontFamily}`;\n    ctx.fillStyle = color;\n    ctx.globalAlpha = opacity / 100;\n    ctx.fillText(textInput, textPosition.x, textPosition.y);\n    ctx.globalAlpha = 1;\n\n    const textElement = {\n      id: generateId(),\n      type: 'text',\n      x: textPosition.x,\n      y: textPosition.y,\n      text: textInput,\n      fontSize,\n      fontFamily,\n      color,\n      opacity\n    };\n\n    setElements(prev => [...prev, textElement]);\n\n    if (socket) {\n      socket.emit('draw-event', {\n        type: 'text',\n        ...textElement\n      });\n    }\n\n    setTextInput('');\n    setIsTyping(false);\n    setTextPosition(null);\n  };\n\n  // Clear canvas\n  const clearCanvas = () => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setElements([]);\n\n    if (socket) {\n      socket.emit('draw-event', { type: 'clear' });\n    }\n  };\n\n  // Zoom functions\n  const handleZoomIn = () => setZoom(prev => Math.min(prev + 10, 300));\n  const handleZoomOut = () => setZoom(prev => Math.max(prev - 10, 25));\n  const handleZoomReset = () => setZoom(100);\n\n  return (\n    <div className=\"flex-1 flex flex-col bg-white\">\n      {/* Main Toolbar */}\n      <div className=\"bg-gray-50 border-b border-gray-200 p-3\">\n        <div className=\"flex items-center justify-between\">\n          {/* Left: Tools */}\n          <div className=\"flex items-center space-x-2\">\n            {tools.map((t) => (\n              <button\n                key={t.name}\n                onClick={() => setTool(t.name)}\n                className={`p-2 rounded-lg text-sm flex flex-col items-center min-w-[50px] ${\n                  tool === t.name\n                    ? 'bg-blue-500 text-white'\n                    : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\n                }`}\n                title={t.label}\n              >\n                <span className=\"text-lg\">{t.icon}</span>\n                <span className=\"text-xs mt-1\">{t.label}</span>\n              </button>\n            ))}\n          </div>\n\n          {/* Right: Zoom Controls */}\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={handleZoomOut}\n              className=\"px-2 py-1 bg-white border border-gray-300 rounded text-sm hover:bg-gray-50\"\n            >\n              −\n            </button>\n            <button\n              onClick={handleZoomReset}\n              className=\"px-3 py-1 bg-white border border-gray-300 rounded text-sm hover:bg-gray-50\"\n            >\n              {zoom}%\n            </button>\n            <button\n              onClick={handleZoomIn}\n              className=\"px-2 py-1 bg-white border border-gray-300 rounded text-sm hover:bg-gray-50\"\n            >\n              +\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Properties Panel */}\n      <div className=\"bg-white border-b border-gray-200 p-3\">\n        <div className=\"flex items-center space-x-6 flex-wrap\">\n          {/* Stroke */}\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-sm font-medium text-gray-700\">Stroke:</label>\n            <div className=\"flex space-x-1\">\n              {colors.map((c) => (\n                <button\n                  key={c}\n                  onClick={() => setColor(c)}\n                  className={`w-6 h-6 rounded border-2 ${\n                    color === c ? 'border-blue-500' : 'border-gray-300'\n                  }`}\n                  style={{ backgroundColor: c }}\n                />\n              ))}\n            </div>\n          </div>\n\n          {/* Stroke Width */}\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-sm font-medium text-gray-700\">Width:</label>\n            <div className=\"flex space-x-1\">\n              {strokeWidths.map((width) => (\n                <button\n                  key={width}\n                  onClick={() => setStrokeWidth(width)}\n                  className={`px-2 py-1 rounded text-xs ${\n                    strokeWidth === width\n                      ? 'bg-blue-500 text-white'\n                      : 'bg-gray-100 text-gray-700 border border-gray-300'\n                  }`}\n                >\n                  {width}px\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Fill */}\n          {['rectangle', 'ellipse', 'diamond'].includes(tool) && (\n            <div className=\"flex items-center space-x-2\">\n              <label className=\"text-sm font-medium text-gray-700\">Fill:</label>\n              <select\n                value={fillStyle}\n                onChange={(e) => setFillStyle(e.target.value)}\n                className=\"px-2 py-1 border border-gray-300 rounded text-sm\"\n              >\n                {fillStyles.map((style) => (\n                  <option key={style} value={style}>\n                    {style}\n                  </option>\n                ))}\n              </select>\n            </div>\n          )}\n\n          {/* Font controls for text */}\n          {tool === 'text' && (\n            <>\n              <div className=\"flex items-center space-x-2\">\n                <label className=\"text-sm font-medium text-gray-700\">Font:</label>\n                <select\n                  value={fontFamily}\n                  onChange={(e) => setFontFamily(e.target.value)}\n                  className=\"px-2 py-1 border border-gray-300 rounded text-sm\"\n                >\n                  {fontFamilies.map((font) => (\n                    <option key={font} value={font}>\n                      {font}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <label className=\"text-sm font-medium text-gray-700\">Size:</label>\n                <input\n                  type=\"number\"\n                  value={fontSize}\n                  onChange={(e) => setFontSize(parseInt(e.target.value))}\n                  className=\"w-16 px-2 py-1 border border-gray-300 rounded text-sm\"\n                  min=\"8\"\n                  max=\"72\"\n                />\n              </div>\n            </>\n          )}\n\n          {/* Opacity */}\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-sm font-medium text-gray-700\">Opacity:</label>\n            <input\n              type=\"range\"\n              min=\"10\"\n              max=\"100\"\n              value={opacity}\n              onChange={(e) => setOpacity(parseInt(e.target.value))}\n              className=\"w-20\"\n            />\n            <span className=\"text-sm text-gray-600\">{opacity}%</span>\n          </div>\n\n          {/* Clear button */}\n          <button\n            onClick={clearCanvas}\n            className=\"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 text-sm\"\n          >\n            🗑️ Clear\n          </button>\n        </div>\n      </div>\n\n      {/* Canvas Area */}\n      <div className=\"flex-1 relative overflow-auto bg-gray-100\">\n        <div className=\"p-8 flex justify-center\">\n          <div \n            className=\"bg-white shadow-lg\"\n            style={{ transform: `scale(${zoom / 100})`, transformOrigin: 'top left' }}\n          >\n            <canvas\n              ref={canvasRef}\n              onMouseDown={handleMouseDown}\n              onMouseMove={handleMouseMove}\n              onMouseUp={handleMouseUp}\n              onMouseLeave={handleMouseUp}\n              className=\"border border-gray-300 cursor-crosshair\"\n              style={{\n                cursor: tool === 'hand' ? 'grab' : \n                       tool === 'selection' ? 'default' :\n                       tool === 'text' ? 'text' : 'crosshair'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Text Input Modal */}\n      {isTyping && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl\">\n            <h3 className=\"text-lg font-medium mb-4\">Add Text</h3>\n            <textarea\n              value={textInput}\n              onChange={(e) => setTextInput(e.target.value)}\n              className=\"w-80 h-32 p-3 border border-gray-300 rounded resize-none focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Type your text here...\"\n              autoFocus\n            />\n            <div className=\"flex justify-end space-x-3 mt-4\">\n              <button\n                onClick={() => {\n                  setIsTyping(false);\n                  setTextInput('');\n                  setTextPosition(null);\n                }}\n                className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded hover:bg-gray-50\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleTextSubmit}\n                className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n              >\n                Add Text\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ExcalidrawCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}